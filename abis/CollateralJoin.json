{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safeEngine",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_cType",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractIsDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractIsEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IntOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonDisableable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "AddAuthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisableContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "Exit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_wad",
          "type": "uint256"
        }
      ],
      "name": "Join",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "RemoveAuthorization",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "authorizedAccounts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_authorized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authorizedAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateral",
      "outputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wei",
          "type": "uint256"
        }
      ],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_wei",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeEngine",
      "outputs": [
        {
          "internalType": "contract ISAFEEngine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "865:2081:137:-:0;;;274:34:138;;;-1:-1:-1;;274:34:138;304:4;274:34;;;1410:361:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1493:10;442:27:135;1493:10:137;442:17:135;:27::i;:::-;-1:-1:-1;1536:27:137::1;-1:-1:-1::0;;;;;1536:25:137;::::1;;:27::i;:::-;1511:10;:53:::0;;-1:-1:-1;;;;;;1511:53:137::1;;-1:-1:-1::0;;;;;1511:53:137;;::::1;;;::::0;;1570:14:::1;:23:::0;;;1599:10:::1;:40:::0;;-1:-1:-1;;;;;;1599:40:137::1;::::0;;::::1;::::0;;::::1;::::0;;1656:21:::1;::::0;;-1:-1:-1;;;1656:21:137;;;;:19:::1;::::0;:21;;::::1;::::0;::::1;::::0;;;;;;;;1599:40;1656:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1645:32;;:8;:32:::0;;;1753:13:::1;::::0;:2:::1;:13;:::i;:::-;1740:10;:26:::0;-1:-1:-1;865:2081:137;;-1:-1:-1;;865:2081:137;1486:196:135;1550:33;:19;1574:8;1550:23;:33::i;:::-;1546:132;;;1598:26;;-1:-1:-1;;;;;1227:32:275;;1209:51;;1598:26:135;;1197:2:275;1182:18;1598:26:135;;;;;;;1486:196;:::o;1546:132::-;1652:19;;-1:-1:-1;;;1652:19:135;;;;;;;;;;;1936:163:194;2000:17;-1:-1:-1;;;;;2029:22:194;;2025:48;;2060:13;;-1:-1:-1;;;2060:13:194;;;;;;;;;;;2025:48;-1:-1:-1;2086:8:194;1936:163::o;8297:150:38:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:38;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;;:::o;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:38;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:38;2581:12;;14:177:275;93:13;;-1:-1:-1;;;;;135:31:275;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;555:273::-;623:6;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;724:9;718:16;774:4;767:5;763:16;756:5;753:27;743:55;;794:1;791;784:12;743:55;817:5;555:273;-1:-1:-1;;;555:273:275:o;833:225::-;900:9;;;921:11;;;918:134;;;974:10;969:3;965:20;962:1;955:31;1009:4;1006:1;999:15;1037:4;1034:1;1027:15;1063:203;865:2081:137;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806341b3a0d91161008c57806394f3f81d1161006657806394f3f81d146101c8578063d8dfeb45146101db578063e824600f146101fb578063ef693bed1461020457600080fd5b806341b3a0d91461016957806367aea31314610176578063894ba833146101c057600080fd5b8063313ce567116100bd578063313ce5671461013857806335b28153146101415780633b4da69f1461015657600080fd5b80631b3ed722146100e457806324ba5884146101005780632e39187614610123575b600080fd5b6100ed60065481565b6040519081526020015b60405180910390f35b61011361010e366004610e8b565b610217565b60405190151581526020016100f7565b61012b610228565b6040516100f79190610ea6565b6100ed60055481565b61015461014f366004610e8b565b610239565b005b610154610164366004610f00565b610284565b6002546101139060ff1681565b60025461019b90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b61015461041d565b6101546101d6366004610e8b565b6104eb565b60035461019b9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ed60045481565b610154610212366004610f00565b610533565b60006102228261068f565b92915050565b606061023460006106bc565b905090565b6102423361068f565b610278576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610281816106d0565b50565b60025460ff166102c0576040517f7abbf1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546102e59073ffffffffffffffffffffffffffffffffffffffff1633308461075f565b6000600654600a6102f69190611079565b6103009083611085565b600254600454919250610100900473ffffffffffffffffffffffffffffffffffffffff1690634a11825e908561033585610841565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff90911660248301526044820152606401600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b50506040805133815273ffffffffffffffffffffffffffffffffffffffff871660208201529081018490527f0e64978d073561c3dfd4d4e3e4dce066cde2ab246a44f990fabb0a21a4a3bd95925060600190505b60405180910390a1505050565b6104263361068f565b61045c576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460ff16610498576040517f7abbf1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040517f2d4b4ecff7bd7503135271925520a2f6c0d98c9473ffc1a1e72c92502f51b25e90600090a1565b6104f43361068f565b61052a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61028181610882565b6003546105579073ffffffffffffffffffffffffffffffffffffffff16838361090a565b6000600654600a6105689190611079565b6105729083611085565b600254600454919250610100900473ffffffffffffffffffffffffffffffffffffffff1690634a11825e90336105a785610841565b6105b09061109c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff90911660248301526044820152606401600060405180830381600087803b15801561062357600080fd5b505af1158015610637573d6000803e3d6000fd5b50506040805133815273ffffffffffffffffffffffffffffffffffffffff871660208201529081018490527fbc2a67d422c268da6fe45f3e7d194e1d98906d221f1cfad62a5c80f2cd209f4c92506060019050610410565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260408120541515610222565b606060006106c983610965565b9392505050565b6106db6000826109c1565b1561072d5760405173ffffffffffffffffffffffffffffffffffffffff821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f7000102906020015b60405180910390a150565b6040517f6027d27e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261083b9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109e3565b50505050565b80600081121561087d576040517f44dddea200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b61088d600082610af4565b156108d85760405173ffffffffffffffffffffffffffffffffffffffff821681527f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b90390602001610722565b6040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109609084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016107b9565b505050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156109b557602002820191906000526020600020905b8154815260200190600101908083116109a1575b50505050509050919050565b60006106c98373ffffffffffffffffffffffffffffffffffffffff8416610b16565b6000610a45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b659092919063ffffffff16565b8051909150156109605780806020019051810190610a6391906110d4565b610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60006106c98373ffffffffffffffffffffffffffffffffffffffff8416610b7c565b6000818152600183016020526040812054610b5d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610222565b506000610222565b6060610b748484600085610c6f565b949350505050565b60008181526001830160205260408120548015610c65576000610ba06001836110f6565b8554909150600090610bb4906001906110f6565b9050818114610c19576000866000018281548110610bd457610bd4611109565b9060005260206000200154905080876000018481548110610bf757610bf7611109565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c2a57610c2a611138565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610222565b6000915050610222565b606082471015610d01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610aeb565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d2a919061118b565b60006040518083038185875af1925050503d8060008114610d67576040519150601f19603f3d011682016040523d82523d6000602084013e610d6c565b606091505b5091509150610d7d87838387610d88565b979650505050505050565b60608315610e1e578251600003610e175773ffffffffffffffffffffffffffffffffffffffff85163b610e17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aeb565b5081610b74565b610b748383815115610e335781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb91906111a7565b803573ffffffffffffffffffffffffffffffffffffffff8116811461087d57600080fd5b600060208284031215610e9d57600080fd5b6106c982610e67565b6020808252825182820181905260009190848201906040850190845b81811015610ef457835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610ec2565b50909695505050505050565b60008060408385031215610f1357600080fd5b610f1c83610e67565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b80851115610fb257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f9857610f98610f2a565b80851615610fa557918102915b93841c9390800290610f5e565b509250929050565b600082610fc957506001610222565b81610fd657506000610222565b8160018114610fec5760028114610ff657611012565b6001915050610222565b60ff84111561100757611007610f2a565b50506001821b610222565b5060208310610133831016604e8410600b8410161715611035575081810a610222565b61103f8383610f59565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561107157611071610f2a565b029392505050565b60006106c98383610fba565b808202811582820484141761022257610222610f2a565b60007f800000000000000000000000000000000000000000000000000000000000000082036110cd576110cd610f2a565b5060000390565b6000602082840312156110e657600080fd5b815180151581146106c957600080fd5b8181038181111561022257610222610f2a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60005b8381101561118257818101518382015260200161116a565b50506000910152565b6000825161119d818460208701611167565b9190910192915050565b60208152600082518060208401526111c6816040850160208701611167565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea264697066735822122041486592199716a5d2fc9cb0badb479d7db1cc13127adc12b58f46d7c8de49f164736f6c63430008130033",
    "sourceMap": "865:2081:137:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:25;;;;;;;;;160::275;;;148:2;133:18;1362:25:137;;;;;;;;628:128:135;;;;;;:::i;:::-;;:::i;:::-;;;753:14:275;;746:22;728:41;;716:2;701:18;628:128:135;588:187:275;872:127:135;;;:::i;:::-;;;;;;;:::i;1301:23:137:-;;;;;;1116:112:135;;;;;;:::i;:::-;;:::i;:::-;;2017:337:137;;;;;;:::i;:::-;;:::i;274:34:138:-;;;;;;;;;1078:29:137;;;;;;;;;;;;;;;1922:42:275;1910:55;;;1892:74;;1880:2;1865:18;1078:29:137;1725:247:275;343:149:138;;;:::i;1334:118:135:-;;;;;;:::i;:::-;;:::i;1145:32:137:-;;;;;;;;;1234:29;;;;;;2637:307;;;;;;:::i;:::-;;:::i;628:128:135:-;697:16;728:23;742:8;728:13;:23::i;:::-;721:30;628:128;-1:-1:-1;;628:128:135:o;872:127::-;925:26;966:28;:19;:26;:28::i;:::-;959:35;;872:127;:::o;1116:112::-;2178:25;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;1196:27:::1;1214:8;1196:17;:27::i;:::-;1116:112:::0;:::o;2017:337:137:-;741:15:138;;;;817:46;;843:20;;;;;;;;;;;;;;817:46;2090:10:137::1;::::0;:60:::1;::::0;:10:::1;;2118;2138:4;2145::::0;2090:27:::1;:60::i;:::-;2156:12;2184:10;;2178:2;:16;;;;:::i;:::-;2171:23;::::0;:4;:23:::1;:::i;:::-;2232:10;::::0;2267:14:::1;::::0;2156:38;;-1:-1:-1;2232:10:137::1;::::0;::::1;;;::::0;:34:::1;::::0;2283:8;2293:12:::1;2156:38:::0;2293:10:::1;:12::i;:::-;2232:74;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;4470:25:275::0;;;;4543:42;4531:55;;;4511:18;;;4504:83;4603:18;;;4596:34;4443:18;;2232:74:137::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2317:32:137::1;::::0;;2322:10:::1;4904:34:275::0;;4853:42;4974:15;;4969:2;4954:18;;4947:43;5006:18;;;4999:34;;;2317:32:137::1;::::0;-1:-1:-1;4831:2:275;4816:18;;-1:-1:-1;2317:32:137::1;;;;;;;;2084:270;2017:337:::0;;:::o;343:149:138:-;2178:25:135;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;741:15:138;;;;817:46:::1;;843:20;;;;;;;;;;;;;;817:46;410:15:::2;:23:::0;;;::::2;::::0;;470:17:::2;::::0;::::2;::::0;;;::::2;343:149::o:0;1334:118:135:-;2178:25;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;1417:30:::1;1438:8;1417:20;:30::i;2637:307:137:-:0;2698:10;;:39;;:10;;2722:8;2732:4;2698:23;:39::i;:::-;2743:12;2771:10;;2765:2;:16;;;;:::i;:::-;2758:23;;:4;:23;:::i;:::-;2819:10;;2854:14;;2743:38;;-1:-1:-1;2819:10:137;;;;;;:34;;2870:10;2883:12;2743:38;2883:10;:12::i;:::-;2882:13;;;:::i;:::-;2819:77;;;;;;;;;;;;;4470:25:275;;;;4543:42;4531:55;;;4511:18;;;4504:83;4603:18;;;4596:34;4443:18;;2819:77:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2907:32:137;;;2912:10;4904:34:275;;4853:42;4974:15;;4969:2;4954:18;;4947:43;5006:18;;;4999:34;;;2907:32:137;;-1:-1:-1;4831:2:275;4816:18;;-1:-1:-1;2907:32:137;4641:398:275;1891:146:135;8985:23:38;;;1963:16:135;4343:19:38;;;:12;:19;;;;;;:24;;1994:38:135;8852:165:38;10251:300;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;:::-;10342:44;10251:300;-1:-1:-1;;;10251:300:38:o;1486:196:135:-;1550:33;:19;1574:8;1550:23;:33::i;:::-;1546:132;;;1598:26;;1922:42:275;1910:55;;1892:74;;1598:26:135;;1880:2:275;1865:18;1598:26:135;;;;;;;;1116:112;:::o;1546:132::-;1652:19;;;;;;;;;;;;;;974:241:28;1139:68;;4853:42:275;4922:15;;;1139:68:28;;;4904:34:275;4974:15;;4954:18;;;4947:43;5006:18;;;4999:34;;;1112:96:28;;1132:5;;1162:27;;4816:18:275;;1139:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;3050:131:196:-;3133:2;3100:11;3146:8;;3142:34;;;3163:13;;;;;;;;;;;;;;3142:34;3050:131;;;:::o;1686:201:135:-;1753:36;:19;1780:8;1753:26;:36::i;:::-;1749:134;;;1804:29;;1922:42:275;1910:55;;1892:74;;1804:29:135;;1880:2:275;1865:18;1804:29:135;1725:247:275;1749:134:135;1861:15;;;;;;;;;;;;;;763:205:28;902:58;;5675:42:275;5663:55;;902:58:28;;;5645:74:275;5735:18;;;5728:34;;;875:86:28;;895:5;;925:23;;5618:18:275;;902:58:28;5471:297:275;875:86:28;763:205;;;:::o;5562:109:38:-;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;8297:150::-;8367:4;8390:50;8395:3;8415:23;;;8390:4;:50::i;3747:706:28:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:28;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;6257:2:275;4351:85:28;;;6239:21:275;6296:2;6276:18;;;6269:30;6335:34;6315:18;;;6308:62;6406:12;6386:18;;;6379:40;6436:19;;4351:85:28;;;;;;;;8615:156:38;8688:4;8711:53;8719:3;8739:23;;;8711:7;:53::i;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:38;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:38;2581:12;;3873:223:29;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:29:o;2778:1388:38:-;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:38;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;4960:446:29;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;7179:2:275;5149:81:29;;;7161:21:275;7218:2;7198:18;;;7191:30;7257:34;7237:18;;;7230:62;7328:8;7308:18;;;7301:36;7354:19;;5149:81:29;6977:402:275;5149:81:29;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:29:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;1465:19;;;;7908:60;;;;;;;8133:2:275;7908:60:29;;;8115:21:275;8172:2;8152:18;;;8145:30;8211:31;8191:18;;;8184:59;8260:18;;7908:60:29;7931:353:275;7908:60:29;-1:-1:-1;8003:10:29;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;196:196:275:-;264:20;;324:42;313:54;;303:65;;293:93;;382:1;379;372:12;397:186;456:6;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;548:29;567:9;548:29;:::i;780:681::-;951:2;1003:21;;;1073:13;;976:18;;;1095:22;;;922:4;;951:2;1174:15;;;;1148:2;1133:18;;;922:4;1217:218;1231:6;1228:1;1225:13;1217:218;;;1296:13;;1311:42;1292:62;1280:75;;1410:15;;;;1375:12;;;;1253:1;1246:9;1217:218;;;-1:-1:-1;1452:3:275;;780:681;-1:-1:-1;;;;;;780:681:275:o;1466:254::-;1534:6;1542;1595:2;1583:9;1574:7;1570:23;1566:32;1563:52;;;1611:1;1608;1601:12;1563:52;1634:29;1653:9;1634:29;:::i;:::-;1624:39;1710:2;1695:18;;;;1682:32;;-1:-1:-1;;;1466:254:275:o;2414:184::-;2466:77;2463:1;2456:88;2563:4;2560:1;2553:15;2587:4;2584:1;2577:15;2603:482;2692:1;2735:5;2692:1;2749:330;2770:7;2760:8;2757:21;2749:330;;;2889:4;2821:66;2817:77;2811:4;2808:87;2805:113;;;2898:18;;:::i;:::-;2948:7;2938:8;2934:22;2931:55;;;2968:16;;;;2931:55;3047:22;;;;3007:15;;;;2749:330;;;2753:3;2603:482;;;;;:::o;3090:866::-;3139:5;3169:8;3159:80;;-1:-1:-1;3210:1:275;3224:5;;3159:80;3258:4;3248:76;;-1:-1:-1;3295:1:275;3309:5;;3248:76;3340:4;3358:1;3353:59;;;;3426:1;3421:130;;;;3333:218;;3353:59;3383:1;3374:10;;3397:5;;;3421:130;3458:3;3448:8;3445:17;3442:43;;;3465:18;;:::i;:::-;-1:-1:-1;;3521:1:275;3507:16;;3536:5;;3333:218;;3635:2;3625:8;3622:16;3616:3;3610:4;3607:13;3603:36;3597:2;3587:8;3584:16;3579:2;3573:4;3570:12;3566:35;3563:77;3560:159;;;-1:-1:-1;3672:19:275;;;3704:5;;3560:159;3751:34;3776:8;3770:4;3751:34;:::i;:::-;3881:6;3813:66;3809:79;3800:7;3797:92;3794:118;;;3892:18;;:::i;:::-;3930:20;;3090:866;-1:-1:-1;;;3090:866:275:o;3961:131::-;4021:5;4050:36;4077:8;4071:4;4050:36;:::i;4097:168::-;4170:9;;;4201;;4218:15;;;4212:22;;4198:37;4188:71;;4239:18;;:::i;5044:191::-;5079:3;5110:66;5103:5;5100:77;5097:103;;5180:18;;:::i;:::-;-1:-1:-1;5220:1:275;5216:13;;5044:191::o;5773:277::-;5840:6;5893:2;5881:9;5872:7;5868:23;5864:32;5861:52;;;5909:1;5906;5899:12;5861:52;5941:9;5935:16;5994:5;5987:13;5980:21;5973:5;5970:32;5960:60;;6016:1;6013;6006:12;6466:128;6533:9;;;6554:11;;;6551:37;;;6568:18;;:::i;6599:184::-;6651:77;6648:1;6641:88;6748:4;6745:1;6738:15;6772:4;6769:1;6762:15;6788:184;6840:77;6837:1;6830:88;6937:4;6934:1;6927:15;6961:4;6958:1;6951:15;7384:250;7469:1;7479:113;7493:6;7490:1;7487:13;7479:113;;;7569:11;;;7563:18;7550:11;;;7543:39;7515:2;7508:10;7479:113;;;-1:-1:-1;;7626:1:275;7608:16;;7601:27;7384:250::o;7639:287::-;7768:3;7806:6;7800:13;7822:66;7881:6;7876:3;7869:4;7861:6;7857:17;7822:66;:::i;:::-;7904:16;;;;;7639:287;-1:-1:-1;;7639:287:275:o;8289:455::-;8438:2;8427:9;8420:21;8401:4;8470:6;8464:13;8513:6;8508:2;8497:9;8493:18;8486:34;8529:79;8601:6;8596:2;8585:9;8581:18;8576:2;8568:6;8564:15;8529:79;:::i;:::-;8660:2;8648:15;8665:66;8644:88;8629:104;;;;8735:2;8625:113;;8289:455;-1:-1:-1;;8289:455:275:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addAuthorization(address)": "35b28153",
    "authorizedAccounts()": "2e391876",
    "authorizedAccounts(address)": "24ba5884",
    "collateral()": "d8dfeb45",
    "collateralType()": "e824600f",
    "contractEnabled()": "41b3a0d9",
    "decimals()": "313ce567",
    "disableContract()": "894ba833",
    "exit(address,uint256)": "ef693bed",
    "join(address,uint256)": "3b4da69f",
    "multiplier()": "1b3ed722",
    "removeAuthorization(address)": "94f3f81d",
    "safeEngine()": "67aea313"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safeEngine\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_cType\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractIsDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractIsEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IntOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonDisableable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisableContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"Exit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"Join\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeEngine\",\"outputs\":[{\"internalType\":\"contract ISAFEEngine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For well behaved ERC20 tokens with less than 18 decimals.         All Join adapters need to implement two basic methods: `join` and `exit`\",\"kind\":\"dev\",\"methods\":{\"addAuthorization(address)\":{\"params\":{\"_account\":\"Account to add auth to\"}},\"authorizedAccounts()\":{\"returns\":{\"_accounts\":\"Array of authorized accounts\"}},\"authorizedAccounts(address)\":{\"returns\":{\"_authorized\":\"Whether the account is authorized or not\"}},\"exit(address,uint256)\":{\"details\":\"This function destroys the collateral representation from inside the system      and exits the collateral from this adapter. The transferred collateral uses      the same decimals as the original collateral token.\",\"params\":{\"_account\":\"Account to which we transfer the collateral out of the system\",\"_wei\":\"Amount of collateral to transfer to account (represented as a number with token decimals)\"}},\"join(address,uint256)\":{\"details\":\"This function locks collateral in the adapter and creates a representation of      the locked collateral inside the system. The representation uses 18 decimals.\",\"params\":{\"_account\":\"Account to which we add collateral into the system\",\"_wei\":\"Amount of collateral to transfer in the system (represented as a number with token decimals)\"}},\"removeAuthorization(address)\":{\"params\":{\"_account\":\"Account to remove auth from\"}}},\"title\":\"CollateralJoin\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAuthorization(address)\":{\"notice\":\"Add auth to an account\"},\"authorizedAccounts()\":{\"notice\":\"Getter for the authorized accounts\"},\"authorizedAccounts(address)\":{\"notice\":\"Checks whether an account is authorized\"},\"collateral()\":{\"notice\":\"Collateral token ERC20Metadata contract\"},\"collateralType()\":{\"notice\":\"System name of the collateral type\"},\"decimals()\":{\"notice\":\"Collateral token decimals\"},\"exit(address,uint256)\":{\"notice\":\"Exit collateral from the system\"},\"join(address,uint256)\":{\"notice\":\"Join collateral in the system\"},\"multiplier()\":{\"notice\":\"Multiplier used to transform collateral into 18 decimals within the system\"},\"removeAuthorization(address)\":{\"notice\":\"Remove auth from an account\"},\"safeEngine()\":{\"notice\":\"SAFEEngine contract\"}},\"notice\":\"This contract allows to connect the SAFEEngine to arbitrary external token implementations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/utils/CollateralJoin.sol\":\"CollateralJoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@contracts/=src/contracts/\",\":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":@interfaces/=src/interfaces/\",\":@libraries/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/contracts/\",\":@script/=src/script/\",\":@test/=src/test/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":isolmate/=lib/isolmate/src/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"src/contracts/utils/Authorizable.sol\":{\"keccak256\":\"0xa1254f44e6dee9058ba5bb22cb580065bc5cfbc91663f5c1a943ad3544c316fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62d2048817aac6045f653610103e44d5bb5974d1b868c7b108670b86100c4809\",\"dweb:/ipfs/QmdX97PLN5Fghe56hLkjYFgm75Zj5ZatzCqCvY6KH8EqcR\"]},\"src/contracts/utils/CollateralJoin.sol\":{\"keccak256\":\"0xb676b1642b38a1cd1ad0715bc2206c1a782c6611045cb37016d22f2af6de1596\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4a03bdf0c30e8fc19dc3923f972258398ce2d5ad2cdeb84e4b977934957e1306\",\"dweb:/ipfs/QmY4Mqq1UNJeV3uDS1R33WmgZYHxiLJE6xCqEcxQWYhA7J\"]},\"src/contracts/utils/Disableable.sol\":{\"keccak256\":\"0xfa3b1750f1f4fcb5ba0433bfd1ad2f8ab87d5204a4aaa3ad59cb0820482a00b1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bdff625e26ab8fc0f4446e615fc2d4f9859f3a1231a095bacdc62bc73a93c6a7\",\"dweb:/ipfs/QmVBACHzBF96bxuvMGr3ABVRgrXBRFEYjL2oLj43oC7Jtd\"]},\"src/interfaces/ISAFEEngine.sol\":{\"keccak256\":\"0x0c5bcb8efb7e58dbf61e27df474f71f967dab83e2889efa982911972296c3d94\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://109849e50829d1bf07799466222e69d3179e50e52ff1514116bae45fb5ef56a7\",\"dweb:/ipfs/Qmbops44S2Hj5F5ufF7yeSbDvoKjeJ49HpgJKqjK2sdt2i\"]},\"src/interfaces/utils/IAuthorizable.sol\":{\"keccak256\":\"0x773005e00777d5ae2be7ed7ce7d528d45153f3ca842ac2194230e9576bf9a152\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://189474fdeac1a7a1746e512b7b5d1c27b2c3c35c40213cb78ed1b342541a4f8d\",\"dweb:/ipfs/QmNec3XYdTpkzKif1rkGAkzywQEGLt2EenBe9C2KfoDyRW\"]},\"src/interfaces/utils/ICollateralJoin.sol\":{\"keccak256\":\"0x3c68f57fa61f5da3148dd1d2706279ddc404acdcf67f45c3e26b3a65fb84a77f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e726de99541016d178d4197574008b1c1f5799590da04a78dc7a3353982f13ef\",\"dweb:/ipfs/QmU9SJfBjUHyvZHnUqhDuwCxdQdgD4ZYGWnekBGMekuLmD\"]},\"src/interfaces/utils/IDisableable.sol\":{\"keccak256\":\"0xcc1b0e16336bc9d2cb0eb577931edfacf1b9efce6c14ea15d1ffa8db47691a5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ce8ff1228b3af1218e27e1020b4166b88adade0a7d87f6cd6f8ad5b0d026d42\",\"dweb:/ipfs/QmS3we5yCr2979GGtM2UU6Wuo7u6LQvYXJH7yh33ksC9yY\"]},\"src/interfaces/utils/IModifiable.sol\":{\"keccak256\":\"0x57c624f4761abdd5e0e65775fc494c58014d52d74e5465943c0200222da689a1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cabcdfaefb9852eb46668b12b65a54f85f6c6a0af5a9098951d618e263e1342f\",\"dweb:/ipfs/Qmd6MLqxve8fZmBWP2SherwEDBZMrn7dWoQPTp41CoSuNQ\"]},\"src/libraries/Assertions.sol\":{\"keccak256\":\"0xd476ae3f327a9c92cdf3cf2de717c9b5f5614d3064354ecc06f1a970d51ed4ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://85473da01ab5ae7d95c2473d482428679f62efa4f56cf72b11c53df9f75ea35d\",\"dweb:/ipfs/QmQiyxsWYmnx8YJPUxT4dScrCtqovneNA47gq1w81zVd2W\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0x1ef46a971d4688e616ffa27b7d8711ac6ef404bf0f8cd406046096201b490445\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dda838cb58b6b181e9dbf3ebea48fb42aa59d66a7ec169e5319bf8fe6f47e6a6\",\"dweb:/ipfs/QmYKLgyWBDFKQHAShuAmcFMsWmzsFMAPzkdnazimfkdeao\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_safeEngine",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_cType",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_collateral",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContractIsDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContractIsEnabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IntOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonDisableable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddAuthorization",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DisableContract",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_wad",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_wad",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Join",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveAuthorization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAuthorization"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAccounts",
          "outputs": [
            {
              "internalType": "bool",
              "name": "_authorized",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateral",
          "outputs": [
            {
              "internalType": "contract IERC20Metadata",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_wei",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_wei",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "join"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAuthorization"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safeEngine",
          "outputs": [
            {
              "internalType": "contract ISAFEEngine",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAuthorization(address)": {
            "params": {
              "_account": "Account to add auth to"
            }
          },
          "authorizedAccounts()": {
            "returns": {
              "_accounts": "Array of authorized accounts"
            }
          },
          "authorizedAccounts(address)": {
            "returns": {
              "_authorized": "Whether the account is authorized or not"
            }
          },
          "exit(address,uint256)": {
            "details": "This function destroys the collateral representation from inside the system      and exits the collateral from this adapter. The transferred collateral uses      the same decimals as the original collateral token.",
            "params": {
              "_account": "Account to which we transfer the collateral out of the system",
              "_wei": "Amount of collateral to transfer to account (represented as a number with token decimals)"
            }
          },
          "join(address,uint256)": {
            "details": "This function locks collateral in the adapter and creates a representation of      the locked collateral inside the system. The representation uses 18 decimals.",
            "params": {
              "_account": "Account to which we add collateral into the system",
              "_wei": "Amount of collateral to transfer in the system (represented as a number with token decimals)"
            }
          },
          "removeAuthorization(address)": {
            "params": {
              "_account": "Account to remove auth from"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addAuthorization(address)": {
            "notice": "Add auth to an account"
          },
          "authorizedAccounts()": {
            "notice": "Getter for the authorized accounts"
          },
          "authorizedAccounts(address)": {
            "notice": "Checks whether an account is authorized"
          },
          "collateral()": {
            "notice": "Collateral token ERC20Metadata contract"
          },
          "collateralType()": {
            "notice": "System name of the collateral type"
          },
          "decimals()": {
            "notice": "Collateral token decimals"
          },
          "exit(address,uint256)": {
            "notice": "Exit collateral from the system"
          },
          "join(address,uint256)": {
            "notice": "Join collateral in the system"
          },
          "multiplier()": {
            "notice": "Multiplier used to transform collateral into 18 decimals within the system"
          },
          "removeAuthorization(address)": {
            "notice": "Remove auth from an account"
          },
          "safeEngine()": {
            "notice": "SAFEEngine contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@contracts/=src/contracts/",
        ":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/",
        ":@interfaces/=src/interfaces/",
        ":@libraries/=src/libraries/",
        ":@openzeppelin/=node_modules/@openzeppelin/contracts/",
        ":@script/=src/script/",
        ":@test/=src/test/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":isolmate/=lib/isolmate/src/",
        ":prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/utils/CollateralJoin.sol": "CollateralJoin"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "src/contracts/utils/Authorizable.sol": {
        "keccak256": "0xa1254f44e6dee9058ba5bb22cb580065bc5cfbc91663f5c1a943ad3544c316fe",
        "urls": [
          "bzz-raw://62d2048817aac6045f653610103e44d5bb5974d1b868c7b108670b86100c4809",
          "dweb:/ipfs/QmdX97PLN5Fghe56hLkjYFgm75Zj5ZatzCqCvY6KH8EqcR"
        ],
        "license": "GPL-3.0"
      },
      "src/contracts/utils/CollateralJoin.sol": {
        "keccak256": "0xb676b1642b38a1cd1ad0715bc2206c1a782c6611045cb37016d22f2af6de1596",
        "urls": [
          "bzz-raw://4a03bdf0c30e8fc19dc3923f972258398ce2d5ad2cdeb84e4b977934957e1306",
          "dweb:/ipfs/QmY4Mqq1UNJeV3uDS1R33WmgZYHxiLJE6xCqEcxQWYhA7J"
        ],
        "license": "GPL-3.0"
      },
      "src/contracts/utils/Disableable.sol": {
        "keccak256": "0xfa3b1750f1f4fcb5ba0433bfd1ad2f8ab87d5204a4aaa3ad59cb0820482a00b1",
        "urls": [
          "bzz-raw://bdff625e26ab8fc0f4446e615fc2d4f9859f3a1231a095bacdc62bc73a93c6a7",
          "dweb:/ipfs/QmVBACHzBF96bxuvMGr3ABVRgrXBRFEYjL2oLj43oC7Jtd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISAFEEngine.sol": {
        "keccak256": "0x0c5bcb8efb7e58dbf61e27df474f71f967dab83e2889efa982911972296c3d94",
        "urls": [
          "bzz-raw://109849e50829d1bf07799466222e69d3179e50e52ff1514116bae45fb5ef56a7",
          "dweb:/ipfs/Qmbops44S2Hj5F5ufF7yeSbDvoKjeJ49HpgJKqjK2sdt2i"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IAuthorizable.sol": {
        "keccak256": "0x773005e00777d5ae2be7ed7ce7d528d45153f3ca842ac2194230e9576bf9a152",
        "urls": [
          "bzz-raw://189474fdeac1a7a1746e512b7b5d1c27b2c3c35c40213cb78ed1b342541a4f8d",
          "dweb:/ipfs/QmNec3XYdTpkzKif1rkGAkzywQEGLt2EenBe9C2KfoDyRW"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/ICollateralJoin.sol": {
        "keccak256": "0x3c68f57fa61f5da3148dd1d2706279ddc404acdcf67f45c3e26b3a65fb84a77f",
        "urls": [
          "bzz-raw://e726de99541016d178d4197574008b1c1f5799590da04a78dc7a3353982f13ef",
          "dweb:/ipfs/QmU9SJfBjUHyvZHnUqhDuwCxdQdgD4ZYGWnekBGMekuLmD"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IDisableable.sol": {
        "keccak256": "0xcc1b0e16336bc9d2cb0eb577931edfacf1b9efce6c14ea15d1ffa8db47691a5f",
        "urls": [
          "bzz-raw://2ce8ff1228b3af1218e27e1020b4166b88adade0a7d87f6cd6f8ad5b0d026d42",
          "dweb:/ipfs/QmS3we5yCr2979GGtM2UU6Wuo7u6LQvYXJH7yh33ksC9yY"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IModifiable.sol": {
        "keccak256": "0x57c624f4761abdd5e0e65775fc494c58014d52d74e5465943c0200222da689a1",
        "urls": [
          "bzz-raw://cabcdfaefb9852eb46668b12b65a54f85f6c6a0af5a9098951d618e263e1342f",
          "dweb:/ipfs/Qmd6MLqxve8fZmBWP2SherwEDBZMrn7dWoQPTp41CoSuNQ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/Assertions.sol": {
        "keccak256": "0xd476ae3f327a9c92cdf3cf2de717c9b5f5614d3064354ecc06f1a970d51ed4ab",
        "urls": [
          "bzz-raw://85473da01ab5ae7d95c2473d482428679f62efa4f56cf72b11c53df9f75ea35d",
          "dweb:/ipfs/QmQiyxsWYmnx8YJPUxT4dScrCtqovneNA47gq1w81zVd2W"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/Math.sol": {
        "keccak256": "0x1ef46a971d4688e616ffa27b7d8711ac6ef404bf0f8cd406046096201b490445",
        "urls": [
          "bzz-raw://dda838cb58b6b181e9dbf3ebea48fb42aa59d66a7ec169e5319bf8fe6f47e6a6",
          "dweb:/ipfs/QmYKLgyWBDFKQHAShuAmcFMsWmzsFMAPzkdnazimfkdeao"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/utils/CollateralJoin.sol",
    "id": 61216,
    "exportedSymbols": {
      "Assertions": [66356],
      "Authorizable": [60886],
      "CollateralJoin": [61215],
      "Disableable": [61281],
      "ICollateralJoin": [65957],
      "IERC20Metadata": [30918],
      "ISAFEEngine": [63494],
      "Math": [66793],
      "SafeERC20": [31407]
    },
    "nodeType": "SourceUnit",
    "src": "36:2911:137",
    "nodes": [
      {
        "id": 61031,
        "nodeType": "PragmaDirective",
        "src": "36:23:137",
        "nodes": [],
        "literals": ["solidity", "0.8", ".19"]
      },
      {
        "id": 61033,
        "nodeType": "ImportDirective",
        "src": "61:70:137",
        "nodes": [],
        "absolutePath": "src/interfaces/utils/ICollateralJoin.sol",
        "file": "@interfaces/utils/ICollateralJoin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 65958,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61032,
              "name": "ICollateralJoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65957,
              "src": "69:15:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61035,
        "nodeType": "ImportDirective",
        "src": "132:56:137",
        "nodes": [],
        "absolutePath": "src/interfaces/ISAFEEngine.sol",
        "file": "@interfaces/ISAFEEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 63495,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61034,
              "name": "ISAFEEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63494,
              "src": "140:11:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61037,
        "nodeType": "ImportDirective",
        "src": "189:87:137",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 30919,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61036,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30918,
              "src": "197:14:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61039,
        "nodeType": "ImportDirective",
        "src": "278:63:137",
        "nodes": [],
        "absolutePath": "src/contracts/utils/Authorizable.sol",
        "file": "@contracts/utils/Authorizable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 60887,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61038,
              "name": "Authorizable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60886,
              "src": "286:12:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61041,
        "nodeType": "ImportDirective",
        "src": "342:61:137",
        "nodes": [],
        "absolutePath": "src/contracts/utils/Disableable.sol",
        "file": "@contracts/utils/Disableable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 61282,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61040,
              "name": "Disableable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61281,
              "src": "350:11:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61043,
        "nodeType": "ImportDirective",
        "src": "405:41:137",
        "nodes": [],
        "absolutePath": "src/libraries/Math.sol",
        "file": "@libraries/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 66794,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61042,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66793,
              "src": "413:4:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61045,
        "nodeType": "ImportDirective",
        "src": "447:72:137",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 31408,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61044,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31407,
              "src": "455:9:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61047,
        "nodeType": "ImportDirective",
        "src": "521:53:137",
        "nodes": [],
        "absolutePath": "src/libraries/Assertions.sol",
        "file": "@libraries/Assertions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61216,
        "sourceUnit": 66357,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61046,
              "name": "Assertions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66356,
              "src": "529:10:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61215,
        "nodeType": "ContractDefinition",
        "src": "865:2081:137",
        "nodes": [
          {
            "id": 61055,
            "nodeType": "UsingForDirective",
            "src": "925:23:137",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61053,
              "name": "Math",
              "nameLocations": ["931:4:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66793,
              "src": "931:4:137"
            },
            "typeName": {
              "id": 61054,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "940:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 61059,
            "nodeType": "UsingForDirective",
            "src": "951:35:137",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61056,
              "name": "SafeERC20",
              "nameLocations": ["957:9:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31407,
              "src": "957:9:137"
            },
            "typeName": {
              "id": 61058,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61057,
                "name": "IERC20Metadata",
                "nameLocations": ["971:14:137"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30918,
                "src": "971:14:137"
              },
              "referencedDeclaration": 30918,
              "src": "971:14:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                "typeString": "contract IERC20Metadata"
              }
            }
          },
          {
            "id": 61062,
            "nodeType": "UsingForDirective",
            "src": "989:29:137",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61060,
              "name": "Assertions",
              "nameLocations": ["995:10:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66356,
              "src": "995:10:137"
            },
            "typeName": {
              "id": 61061,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1010:7:137",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 61066,
            "nodeType": "VariableDeclaration",
            "src": "1078:29:137",
            "nodes": [],
            "baseFunctions": [65915],
            "constant": false,
            "documentation": {
              "id": 61063,
              "nodeType": "StructuredDocumentation",
              "src": "1044:31:137",
              "text": "@inheritdoc ICollateralJoin"
            },
            "functionSelector": "67aea313",
            "mutability": "mutable",
            "name": "safeEngine",
            "nameLocation": "1097:10:137",
            "scope": 61215,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
              "typeString": "contract ISAFEEngine"
            },
            "typeName": {
              "id": 61065,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61064,
                "name": "ISAFEEngine",
                "nameLocations": ["1078:11:137"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63494,
                "src": "1078:11:137"
              },
              "referencedDeclaration": 63494,
              "src": "1078:11:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                "typeString": "contract ISAFEEngine"
              }
            },
            "visibility": "public"
          },
          {
            "id": 61070,
            "nodeType": "VariableDeclaration",
            "src": "1145:32:137",
            "nodes": [],
            "baseFunctions": [65922],
            "constant": false,
            "documentation": {
              "id": 61067,
              "nodeType": "StructuredDocumentation",
              "src": "1111:31:137",
              "text": "@inheritdoc ICollateralJoin"
            },
            "functionSelector": "d8dfeb45",
            "mutability": "mutable",
            "name": "collateral",
            "nameLocation": "1167:10:137",
            "scope": 61215,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
              "typeString": "contract IERC20Metadata"
            },
            "typeName": {
              "id": 61069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61068,
                "name": "IERC20Metadata",
                "nameLocations": ["1145:14:137"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30918,
                "src": "1145:14:137"
              },
              "referencedDeclaration": 30918,
              "src": "1145:14:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                "typeString": "contract IERC20Metadata"
              }
            },
            "visibility": "public"
          },
          {
            "id": 61073,
            "nodeType": "VariableDeclaration",
            "src": "1234:29:137",
            "nodes": [],
            "baseFunctions": [65928],
            "constant": false,
            "documentation": {
              "id": 61071,
              "nodeType": "StructuredDocumentation",
              "src": "1200:31:137",
              "text": "@inheritdoc ICollateralJoin"
            },
            "functionSelector": "e824600f",
            "mutability": "mutable",
            "name": "collateralType",
            "nameLocation": "1249:14:137",
            "scope": 61215,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 61072,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1234:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 61076,
            "nodeType": "VariableDeclaration",
            "src": "1301:23:137",
            "nodes": [],
            "baseFunctions": [65934],
            "constant": false,
            "documentation": {
              "id": 61074,
              "nodeType": "StructuredDocumentation",
              "src": "1267:31:137",
              "text": "@inheritdoc ICollateralJoin"
            },
            "functionSelector": "313ce567",
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "1316:8:137",
            "scope": 61215,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61075,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 61079,
            "nodeType": "VariableDeclaration",
            "src": "1362:25:137",
            "nodes": [],
            "baseFunctions": [65940],
            "constant": false,
            "documentation": {
              "id": 61077,
              "nodeType": "StructuredDocumentation",
              "src": "1328:31:137",
              "text": "@inheritdoc ICollateralJoin"
            },
            "functionSelector": "1b3ed722",
            "mutability": "mutable",
            "name": "multiplier",
            "nameLocation": "1377:10:137",
            "scope": 61215,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61078,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1362:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 61123,
            "nodeType": "FunctionDefinition",
            "src": "1410:361:137",
            "nodes": [],
            "body": {
              "id": 61122,
              "nodeType": "Block",
              "src": "1505:266:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61092,
                      "name": "safeEngine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61066,
                      "src": "1511:10:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                        "typeString": "contract ISAFEEngine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 61094,
                              "name": "_safeEngine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61081,
                              "src": "1536:11:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 61095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1548:13:137",
                            "memberName": "assertNonNull",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66355,
                            "src": "1536:25:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$attached_to$_t_address_$",
                              "typeString": "function (address) pure returns (address)"
                            }
                          },
                          "id": 61096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1536:27:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61093,
                        "name": "ISAFEEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63494,
                        "src": "1524:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISAFEEngine_$63494_$",
                          "typeString": "type(contract ISAFEEngine)"
                        }
                      },
                      "id": 61097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:40:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                        "typeString": "contract ISAFEEngine"
                      }
                    },
                    "src": "1511:53:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                      "typeString": "contract ISAFEEngine"
                    }
                  },
                  "id": 61099,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:53:137"
                },
                {
                  "expression": {
                    "id": 61102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61100,
                      "name": "collateralType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61073,
                      "src": "1570:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61101,
                      "name": "_cType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61083,
                      "src": "1587:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1570:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 61103,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:23:137"
                },
                {
                  "expression": {
                    "id": 61108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61104,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61070,
                      "src": "1599:10:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61106,
                          "name": "_collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61085,
                          "src": "1627:11:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61105,
                        "name": "IERC20Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30918,
                        "src": "1612:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$30918_$",
                          "typeString": "type(contract IERC20Metadata)"
                        }
                      },
                      "id": 61107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1612:27:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "src": "1599:40:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "id": 61109,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:40:137"
                },
                {
                  "expression": {
                    "id": 61114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61110,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61076,
                      "src": "1645:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 61111,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61070,
                          "src": "1656:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 61112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1667:8:137",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30917,
                        "src": "1656:19:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 61113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:21:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1645:32:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61115,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:32:137"
                },
                {
                  "expression": {
                    "id": 61120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61116,
                      "name": "multiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61079,
                      "src": "1740:10:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3138",
                        "id": 61117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1753:2:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 61118,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61076,
                        "src": "1758:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1753:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:26:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61121,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:26:137"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 61088,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1493:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 61089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1497:6:137",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1493:10:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 61090,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 61087,
                  "name": "Authorizable",
                  "nameLocations": ["1480:12:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60886,
                  "src": "1480:12:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "1480:24:137"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 61086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61081,
                  "mutability": "mutable",
                  "name": "_safeEngine",
                  "nameLocation": "1430:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61123,
                  "src": "1422:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61083,
                  "mutability": "mutable",
                  "name": "_cType",
                  "nameLocation": "1451:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61123,
                  "src": "1443:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61082,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61085,
                  "mutability": "mutable",
                  "name": "_collateral",
                  "nameLocation": "1467:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61123,
                  "src": "1459:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:58:137"
            },
            "returnParameters": {
              "id": 61091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:137"
            },
            "scope": 61215,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61171,
            "nodeType": "FunctionDefinition",
            "src": "2017:337:137",
            "nodes": [],
            "body": {
              "id": 61170,
              "nodeType": "Block",
              "src": "2084:270:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2118:3:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2122:6:137",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2118:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2138:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollateralJoin_$61215",
                              "typeString": "contract CollateralJoin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CollateralJoin_$61215",
                              "typeString": "contract CollateralJoin"
                            }
                          ],
                          "id": 61139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2130:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2130:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61142,
                        "name": "_wei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61128,
                        "src": "2145:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61133,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61070,
                        "src": "2090:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 61135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2101:16:137",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31184,
                      "src": "2090:27:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30195_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$30195_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 61143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:60:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61144,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:60:137"
                },
                {
                  "assignments": [61146],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61146,
                      "mutability": "mutable",
                      "name": "_wad",
                      "nameLocation": "2164:4:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 61170,
                      "src": "2156:12:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61152,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61147,
                      "name": "_wei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61128,
                      "src": "2171:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 61148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:2:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 61149,
                        "name": "multiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61079,
                        "src": "2184:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2178:16:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2171:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2156:38:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61156,
                        "name": "collateralType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61073,
                        "src": "2267:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61157,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61126,
                        "src": "2283:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61158,
                            "name": "_wad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61146,
                            "src": "2293:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 61159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2298:5:137",
                          "memberName": "toInt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66750,
                          "src": "2293:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (int256)"
                          }
                        },
                        "id": 61160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2293:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 61153,
                        "name": "safeEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61066,
                        "src": "2232:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                          "typeString": "contract ISAFEEngine"
                        }
                      },
                      "id": 61155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2243:23:137",
                      "memberName": "modifyCollateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63442,
                      "src": "2232:34:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (bytes32,address,int256) external"
                      }
                    },
                    "id": 61161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:74:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61162,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:74:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2322:3:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2326:6:137",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2322:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61166,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61126,
                        "src": "2334:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61167,
                        "name": "_wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61146,
                        "src": "2344:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61163,
                      "name": "Join",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65900,
                      "src": "2317:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 61168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:32:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61169,
                  "nodeType": "EmitStatement",
                  "src": "2312:37:137"
                }
              ]
            },
            "baseFunctions": [65948],
            "documentation": {
              "id": 61124,
              "nodeType": "StructuredDocumentation",
              "src": "1796:218:137",
              "text": " @dev This function locks collateral in the adapter and creates a representation of\n      the locked collateral inside the system. The representation uses 18 decimals.\n @inheritdoc ICollateralJoin"
            },
            "functionSelector": "3b4da69f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61130,
                  "name": "whenEnabled",
                  "nameLocations": ["2072:11:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61270,
                  "src": "2072:11:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "2072:11:137"
              }
            ],
            "name": "join",
            "nameLocation": "2026:4:137",
            "parameters": {
              "id": 61129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61126,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2039:8:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "2031:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61128,
                  "mutability": "mutable",
                  "name": "_wei",
                  "nameLocation": "2057:4:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "2049:12:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2030:32:137"
            },
            "returnParameters": {
              "id": 61132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:0:137"
            },
            "scope": 61215,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61214,
            "nodeType": "FunctionDefinition",
            "src": "2637:307:137",
            "nodes": [],
            "body": {
              "id": 61213,
              "nodeType": "Block",
              "src": "2692:252:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61182,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61174,
                        "src": "2722:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61183,
                        "name": "_wei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61176,
                        "src": "2732:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61179,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61070,
                        "src": "2698:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$30918",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 61181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2709:12:137",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31158,
                      "src": "2698:23:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30195_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$30195_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 61184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:39:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61185,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:39:137"
                },
                {
                  "assignments": [61187],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61187,
                      "mutability": "mutable",
                      "name": "_wad",
                      "nameLocation": "2751:4:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 61213,
                      "src": "2743:12:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61186,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2743:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61193,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61188,
                      "name": "_wei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61176,
                      "src": "2758:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 61189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2765:2:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 61190,
                        "name": "multiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61079,
                        "src": "2771:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2765:16:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2758:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2743:38:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61197,
                        "name": "collateralType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61073,
                        "src": "2854:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 61198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2870:3:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2874:6:137",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2870:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "2882:13:137",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 61200,
                              "name": "_wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61187,
                              "src": "2883:4:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 61201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2888:5:137",
                            "memberName": "toInt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66750,
                            "src": "2883:10:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (int256)"
                            }
                          },
                          "id": 61202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:12:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 61194,
                        "name": "safeEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61066,
                        "src": "2819:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISAFEEngine_$63494",
                          "typeString": "contract ISAFEEngine"
                        }
                      },
                      "id": 61196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2830:23:137",
                      "memberName": "modifyCollateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63442,
                      "src": "2819:34:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (bytes32,address,int256) external"
                      }
                    },
                    "id": 61204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:77:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61205,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:77:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2912:3:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2916:6:137",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2912:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61209,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61174,
                        "src": "2924:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61210,
                        "name": "_wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61187,
                        "src": "2934:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61206,
                      "name": "Exit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65908,
                      "src": "2907:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 61211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:32:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61212,
                  "nodeType": "EmitStatement",
                  "src": "2902:37:137"
                }
              ]
            },
            "baseFunctions": [65956],
            "documentation": {
              "id": 61172,
              "nodeType": "StructuredDocumentation",
              "src": "2358:276:137",
              "text": " @dev This function destroys the collateral representation from inside the system\n      and exits the collateral from this adapter. The transferred collateral uses\n      the same decimals as the original collateral token.\n @inheritdoc ICollateralJoin"
            },
            "functionSelector": "ef693bed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nameLocation": "2646:4:137",
            "parameters": {
              "id": 61177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61174,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2659:8:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61214,
                  "src": "2651:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2651:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61176,
                  "mutability": "mutable",
                  "name": "_wei",
                  "nameLocation": "2677:4:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 61214,
                  "src": "2669:12:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2650:32:137"
            },
            "returnParameters": {
              "id": 61178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:0:137"
            },
            "scope": 61215,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 61049,
              "name": "Disableable",
              "nameLocations": ["892:11:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61281,
              "src": "892:11:137"
            },
            "id": 61050,
            "nodeType": "InheritanceSpecifier",
            "src": "892:11:137"
          },
          {
            "baseName": {
              "id": 61051,
              "name": "ICollateralJoin",
              "nameLocations": ["905:15:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65957,
              "src": "905:15:137"
            },
            "id": 61052,
            "nodeType": "InheritanceSpecifier",
            "src": "905:15:137"
          }
        ],
        "canonicalName": "CollateralJoin",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 61048,
          "nodeType": "StructuredDocumentation",
          "src": "576:288:137",
          "text": " @title  CollateralJoin\n @notice This contract allows to connect the SAFEEngine to arbitrary external token implementations\n @dev    For well behaved ERC20 tokens with less than 18 decimals.\n         All Join adapters need to implement two basic methods: `join` and `exit`"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [61215, 65957, 61281, 60886, 65980, 65816],
        "name": "CollateralJoin",
        "nameLocation": "874:14:137",
        "scope": 61216,
        "usedErrors": [65788, 65790, 65792, 65967, 65969, 65971, 66150, 66429]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 137
}
