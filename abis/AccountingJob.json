{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountingEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stabilityFeeTreasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotWorkable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnrecognizedCType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnrecognizedParam",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "AddAuthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_param",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_cType",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "ModifyParameters",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "RemoveAuthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_rewardedAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "Rewarded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountingEngine",
      "outputs": [
        {
          "internalType": "contract IAccountingEngine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "authorizedAccounts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_authorized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authorizedAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_cType",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_param",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "modifyParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_param",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "modifyParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldWorkAuctionDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldWorkAuctionSurplus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldWorkPopDebtFromQueue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldWorkTransferExtraSurplus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilityFeeTreasury",
      "outputs": [
        {
          "internalType": "contract IStabilityFeeTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workAuctionDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workAuctionSurplus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_debtBlockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "workPopDebtFromQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workTransferExtraSurplus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620014e1380380620014e18339810160408190526200003491620001aa565b600180546001600160a01b0319166001600160a01b0384161790556000819055336200006081620000b0565b505060048054600163ffffff01600160c01b03199091166401000000006001600160a01b03959095169490940260ff1916939093179290921763ffffff00191663010101001790915550620001eb565b620000bd6002826200011b565b1562000102576040516001600160a01b03821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f70001029060200160405180910390a150565b604051633013e93f60e11b815260040160405180910390fd5b600062000132836001600160a01b0384166200013b565b90505b92915050565b6000818152600183016020526040812054620001845750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000135565b50600062000135565b80516001600160a01b0381168114620001a557600080fd5b919050565b600080600060608486031215620001c057600080fd5b620001cb846200018d565b9250620001db602085016200018d565b9150604084015190509250925092565b6112e680620001fb6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806358d1141f116100b25780638482081411610081578063961d45c411610066578063961d45c41461024e578063da8a4bb814610276578063f7b2a7be1461028957600080fd5b8063848208141461023357806394f3f81d1461023b57600080fd5b806358d1141f146101bc5780635eadae8e146101c95780636e5d9d1a146101dc57806372b6f12a146101ee57600080fd5b80632e391876116100ee5780632e3918761461016d57806335b28153146101825780635140d0421461019557806357fbd947146101a857600080fd5b8063063501fa1461012057806312f335261461012a57806324ba58841461013d5780632781ef1c14610165575b600080fd5b6101286102a0565b005b610128610138366004611053565b610432565b61015061014b3660046110a3565b6104bd565b60405190151581526020015b60405180910390f35b6101286104ce565b610175610602565b60405161015c91906110d9565b6101286101903660046110a3565b610613565b6004546101509062010000900460ff1681565b600454610150906301000000900460ff1681565b6004546101509060ff1681565b6101286101d7366004611133565b61065e565b60045461015090610100900460ff1681565b60015461020e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015c565b6101286107f4565b6101286102493660046110a3565b6108a3565b60045461020e90640100000000900473ffffffffffffffffffffffffffffffffffffffff1681565b61012861028436600461114c565b6108eb565b61029260005481565b60405190815260200161015c565b6004546301000000900460ff166102e3576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344e330c46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561034b57600080fd5b505af115801561035f573d6000803e3d6000fd5b50506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff909116925063c6cdbcbb91506044015b600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b50506000546040805133815260208101929092527fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe563935001905060405180910390a1565b61043b33610974565b610471576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8261047d8484846109a1565b83837fe436a8be7dc6aab90b400800ecc86e46fb600f2e18989b5d0389840fdabbf2ed846040516104ae9190611193565b60405180910390a35b50505050565b60006104c882610974565b92915050565b600454610100900460ff1661050f576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633d2fa89b6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a091906111ff565b506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff9091169063c6cdbcbb906044016103c0565b606061060e60026109d3565b905090565b61061c33610974565b610652576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065b816109e7565b50565b60045460ff1661069a576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480546040517f8b24dc3e000000000000000000000000000000000000000000000000000000008152918201839052640100000000900473ffffffffffffffffffffffffffffffffffffffff1690638b24dc3e90602401600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b50506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff909116925063c6cdbcbb9150604401600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b50506000546040805133815260208101929092527fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe56393500190505b60405180910390a150565b60045462010000900460ff16610836576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff713a9f6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561057c573d6000803e3d6000fd5b6108ac33610974565b6108e2576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065b81610a6f565b6108f433610974565b61092a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109348282610af7565b6000801b827fe436a8be7dc6aab90b400800ecc86e46fb600f2e18989b5d0389840fdabbf2ed836040516109689190611193565b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081205415156104c8565b6040517f9d2ff48000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606060006109e083610d97565b9392505050565b6109f2600282610df3565b15610a3d5760405173ffffffffffffffffffffffffffffffffffffffff821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f7000102906020016107e9565b6040517f6027d27e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7a600282610e15565b15610ac55760405173ffffffffffffffffffffffffffffffffffffffff821681527f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b903906020016107e9565b6040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b04826020015190565b90506000610b13836020015190565b9050837f6163636f756e74696e67456e67696e650000000000000000000000000000000003610b8857600480547fffffffffffffffff0000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff8516021790556104b7565b837f73746162696c697479466565547265617375727900000000000000000000000003610bf457600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556104b7565b837f73686f756c64576f726b506f704465627446726f6d517565756500000000000003610c4c57600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556104b7565b837f73686f756c64576f726b41756374696f6e44656274000000000000000000000003610ca857600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100831515021790556104b7565b837f73686f756c64576f726b41756374696f6e537572706c7573000000000000000003610d0557600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1662010000831515021790556104b7565b837f73686f756c64576f726b5472616e736665724578747261537572706c7573000003610d6357600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff166301000000831515021790556104b7565b837f726577617264416d6f756e740000000000000000000000000000000000000000036109a15760208301516000556104b7565b606081600001805480602002602001604051908101604052809291908181526020018280548015610de757602002820191906000526020600020905b815481526020019060010190808311610dd3575b50505050509050919050565b60006109e08373ffffffffffffffffffffffffffffffffffffffff8416610e37565b60006109e08373ffffffffffffffffffffffffffffffffffffffff8416610e86565b6000818152600183016020526040812054610e7e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c8565b5060006104c8565b60008181526001830160205260408120548015610f6f576000610eaa600183611218565b8554909150600090610ebe90600190611218565b9050818114610f23576000866000018281548110610ede57610ede611252565b9060005260206000200154905080876000018481548110610f0157610f01611252565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610f3457610f34611281565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c8565b60009150506104c8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610fb957600080fd5b813567ffffffffffffffff80821115610fd457610fd4610f79565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561101a5761101a610f79565b8160405283815286602085880101111561103357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561106857600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561108d57600080fd5b61109986828701610fa8565b9150509250925092565b6000602082840312156110b557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109e057600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561112757835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016110f5565b50909695505050505050565b60006020828403121561114557600080fd5b5035919050565b6000806040838503121561115f57600080fd5b82359150602083013567ffffffffffffffff81111561117d57600080fd5b61118985828601610fa8565b9150509250929050565b600060208083528351808285015260005b818110156111c0578581018301518582016040015282016111a4565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561121157600080fd5b5051919050565b818103818111156104c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206a233ac0ce20fedd924609445acc4bdb19d538e4e074fa47374e5b5ceb4a374364736f6c63430008130033",
    "sourceMap": "498:2299:111:-:0;;;873:396;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;437:20:112;:67;;-1:-1:-1;;;;;;437:67:112;-1:-1:-1;;;;;437:67:112;;;;;-1:-1:-1;510:28:112;;;1037:10:111;442:27:138;1037:10:111;442:17:138;:27::i;:::-;-1:-1:-1;;1055:16:111::2;:55:::0;;-1:-1:-1;;;;;;;1117:33:111;;;1055:55;-1:-1:-1;;;;;1055:55:111;;;::::2;::::0;;;::::2;-1:-1:-1::0;;1117:33:111;;;;;;;;::::2;-1:-1:-1::0;;1227:37:111;;;;;;-1:-1:-1;498:2299:111;;1486:196:138;1550:33;:19;1574:8;1550:23;:33::i;:::-;1546:132;;;1598:26;;-1:-1:-1;;;;;719:32:279;;701:51;;1598:26:138;;689:2:279;674:18;1598:26:138;;;;;;;1486:196;:::o;1546:132::-;1652:19;;-1:-1:-1;;;1652:19:138;;;;;;;;;;;8297:150:38;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:38;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;;:::o;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:38;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:38;2581:12;;14:177:279;93:13;;-1:-1:-1;;;;;135:31:279;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;555:203::-;498:2299:111;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c806358d1141f116100b25780638482081411610081578063961d45c411610066578063961d45c41461024e578063da8a4bb814610276578063f7b2a7be1461028957600080fd5b8063848208141461023357806394f3f81d1461023b57600080fd5b806358d1141f146101bc5780635eadae8e146101c95780636e5d9d1a146101dc57806372b6f12a146101ee57600080fd5b80632e391876116100ee5780632e3918761461016d57806335b28153146101825780635140d0421461019557806357fbd947146101a857600080fd5b8063063501fa1461012057806312f335261461012a57806324ba58841461013d5780632781ef1c14610165575b600080fd5b6101286102a0565b005b610128610138366004611053565b610432565b61015061014b3660046110a3565b6104bd565b60405190151581526020015b60405180910390f35b6101286104ce565b610175610602565b60405161015c91906110d9565b6101286101903660046110a3565b610613565b6004546101509062010000900460ff1681565b600454610150906301000000900460ff1681565b6004546101509060ff1681565b6101286101d7366004611133565b61065e565b60045461015090610100900460ff1681565b60015461020e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015c565b6101286107f4565b6101286102493660046110a3565b6108a3565b60045461020e90640100000000900473ffffffffffffffffffffffffffffffffffffffff1681565b61012861028436600461114c565b6108eb565b61029260005481565b60405190815260200161015c565b6004546301000000900460ff166102e3576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344e330c46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561034b57600080fd5b505af115801561035f573d6000803e3d6000fd5b50506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff909116925063c6cdbcbb91506044015b600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b50506000546040805133815260208101929092527fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe563935001905060405180910390a1565b61043b33610974565b610471576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8261047d8484846109a1565b83837fe436a8be7dc6aab90b400800ecc86e46fb600f2e18989b5d0389840fdabbf2ed846040516104ae9190611193565b60405180910390a35b50505050565b60006104c882610974565b92915050565b600454610100900460ff1661050f576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633d2fa89b6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a091906111ff565b506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff9091169063c6cdbcbb906044016103c0565b606061060e60026109d3565b905090565b61061c33610974565b610652576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065b816109e7565b50565b60045460ff1661069a576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480546040517f8b24dc3e000000000000000000000000000000000000000000000000000000008152918201839052640100000000900473ffffffffffffffffffffffffffffffffffffffff1690638b24dc3e90602401600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b50506001546000546040517fc6cdbcbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff909116925063c6cdbcbb9150604401600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b50506000546040805133815260208101929092527fb3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe56393500190505b60405180910390a150565b60045462010000900460ff16610836576040517f3bf5822400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff713a9f6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561057c573d6000803e3d6000fd5b6108ac33610974565b6108e2576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065b81610a6f565b6108f433610974565b61092a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109348282610af7565b6000801b827fe436a8be7dc6aab90b400800ecc86e46fb600f2e18989b5d0389840fdabbf2ed836040516109689190611193565b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081205415156104c8565b6040517f9d2ff48000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606060006109e083610d97565b9392505050565b6109f2600282610df3565b15610a3d5760405173ffffffffffffffffffffffffffffffffffffffff821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f7000102906020016107e9565b6040517f6027d27e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7a600282610e15565b15610ac55760405173ffffffffffffffffffffffffffffffffffffffff821681527f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b903906020016107e9565b6040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b04826020015190565b90506000610b13836020015190565b9050837f6163636f756e74696e67456e67696e650000000000000000000000000000000003610b8857600480547fffffffffffffffff0000000000000000000000000000000000000000ffffffff1664010000000073ffffffffffffffffffffffffffffffffffffffff8516021790556104b7565b837f73746162696c697479466565547265617375727900000000000000000000000003610bf457600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556104b7565b837f73686f756c64576f726b506f704465627446726f6d517565756500000000000003610c4c57600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556104b7565b837f73686f756c64576f726b41756374696f6e44656274000000000000000000000003610ca857600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100831515021790556104b7565b837f73686f756c64576f726b41756374696f6e537572706c7573000000000000000003610d0557600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1662010000831515021790556104b7565b837f73686f756c64576f726b5472616e736665724578747261537572706c7573000003610d6357600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff166301000000831515021790556104b7565b837f726577617264416d6f756e740000000000000000000000000000000000000000036109a15760208301516000556104b7565b606081600001805480602002602001604051908101604052809291908181526020018280548015610de757602002820191906000526020600020905b815481526020019060010190808311610dd3575b50505050509050919050565b60006109e08373ffffffffffffffffffffffffffffffffffffffff8416610e37565b60006109e08373ffffffffffffffffffffffffffffffffffffffff8416610e86565b6000818152600183016020526040812054610e7e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c8565b5060006104c8565b60008181526001830160205260408120548015610f6f576000610eaa600183611218565b8554909150600090610ebe90600190611218565b9050818114610f23576000866000018281548110610ede57610ede611252565b9060005260206000200154905080876000018481548110610f0157610f01611252565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610f3457610f34611281565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c8565b60009150506104c8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610fb957600080fd5b813567ffffffffffffffff80821115610fd457610fd4610f79565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561101a5761101a610f79565b8160405283815286602085880101111561103357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561106857600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561108d57600080fd5b61109986828701610fa8565b9150509250925092565b6000602082840312156110b557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109e057600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561112757835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016110f5565b50909695505050505050565b60006020828403121561114557600080fd5b5035919050565b6000806040838503121561115f57600080fd5b82359150602083013567ffffffffffffffff81111561117d57600080fd5b61118985828601610fa8565b9150509250929050565b600060208083528351808285015260005b818110156111c0578581018301518582016040015282016111a4565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561121157600080fd5b5051919050565b818103818111156104c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206a233ac0ce20fedd924609445acc4bdb19d538e4e074fa47374e5b5ceb4a374364736f6c63430008130033",
    "sourceMap": "498:2299:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:165;;;:::i;:::-;;871:238:143;;;;;;:::i;:::-;;:::i;628:128:138:-;;;;;;:::i;:::-;;:::i;:::-;;;1925:14:279;;1918:22;1900:41;;1888:2;1873:18;628:128:138;;;;;;;;1493:138:111;;;:::i;872:127:138:-;;;:::i;:::-;;;;;;;:::i;1116:112::-;;;;;;:::i;:::-;;:::i;700:36:111:-;;;;;;;;;;;;740:42;;;;;;;;;;;;621:38;;;;;;;;;1290:199;;;;;;:::i;:::-;;:::i;663:33::-;;;;;;;;;;;;293:49:112;;;;;;;;;;;;3030:42:279;3018:55;;;3000:74;;2988:2;2973:18;293:49:112;2823:257:279;1635:147:111;;;:::i;1334:118:138:-;;;;;;:::i;:::-;;:::i;809:41:111:-;;;;;;;;;;;;641:196:143;;;;;;:::i;:::-;;:::i;239:27:112:-;;;;;;;;;3882:25:279;;;3870:2;3855:18;239:27:112;3736:177:279;1786:165:111;1849:30:::1;::::0;;;::::1;;;1844:57;;1888:13;;;;;;;;;;;;;;1844:57;1907:16;::::0;::::1;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;598:20:112;;;641:12;598:56;;;;;629:10;598:56;;;4092:74:279;4182:18;;;4175:34;;;;598:20:112;;;;;-1:-1:-1;598:30:112;;-1:-1:-1;4065:18:279;;598:56:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;686:12:112;;665:34;;;674:10;4092:74:279;;4197:2;4182:18;;4175:34;;;;665::112;;-1:-1:-1;4065:18:279;;-1:-1:-1;665:34:112;;;;;;;1786:165:111:o;871:238:143:-;2178:25:138;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;1000:6:143::1;1014:40:::2;1032:6;1040;1048:5;1014:17;:40::i;:::-;1090:6;1082;1065:39;1098:5;1065:39;;;;;;:::i;:::-;;;;;;;;2315:28:::1;2232:1:138;871:238:143::0;;;:::o;628:128:138:-;697:16;728:23;742:8;728:13;:23::i;:::-;721:30;628:128;-1:-1:-1;;628:128:138:o;1493:138:111:-;1547:21:::1;::::0;::::1;::::0;::::1;;;1542:48;;1577:13;;;;;;;;;;;;;;1542:48;1596:16;::::0;::::1;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;598:20:112;;;641:12;598:56;;;;;629:10;598:56;;;4092:74:279;4182:18;;;4175:34;;;;598:20:112;;;;;:30;;4065:18:279;;598:56:112;3918:297:279;872:127:138;925:26;966:28;:19;:26;:28::i;:::-;959:35;;872:127;:::o;1116:112::-;2178:25;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;1196:27:::1;1214:8;1196:17;:27::i;:::-;1116:112:::0;:::o;1290:199:111:-;1376:26:::1;::::0;::::1;;1371:53;;1411:13;;;;;;;;;;;;;;1371:53;1430:16;::::0;;:54:::1;::::0;;;;;;::::1;3882:25:279::0;;;1430:16:111;;::::1;;;::::0;:33:::1;::::0;3855:18:279;;1430:54:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;598:20:112;;;641:12;598:56;;;;;629:10;598:56;;;4092:74:279;4182:18;;;4175:34;;;;598:20:112;;;;;-1:-1:-1;598:30:112;;-1:-1:-1;4065:18:279;;598:56:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;686:12:112;;665:34;;;674:10;4092:74:279;;4197:2;4182:18;;4175:34;;;;665::112;;-1:-1:-1;4065:18:279;;-1:-1:-1;665:34:112;;;;;;;;1290:199:111;:::o;1635:147::-;1692:24:::1;::::0;;;::::1;;;1687:51;;1725:13;;;;;;;;;;;;;;1687:51;1744:16;::::0;::::1;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1334:118:138::0;2178:25;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;1417:30:::1;1438:8;1417:20;:30::i;641:196:143:-:0;2178:25:138;2192:10;2178:13;:25::i;:::-;2173:53;;2212:14;;;;;;;;;;;;;;2173:53;743:32:143::2;761:6;769:5;743:17;:32::i;:::-;573:1;565:10:::0;::::2;803:6;786:46;826:5;786:46;;;;;;:::i;:::-;;;;;;;;641:196:::0;;:::o;1891:146:138:-;8985:23:38;;;1963:16:138;4343:19:38;;;:12;:19;;;;;;:24;;1994:38:138;8852:165:38;1694:133:143;1803:19;;;;;;;;;;;;;;10251:300:38;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;:::-;10342:44;10251:300;-1:-1:-1;;;10251:300:38:o;1486:196:138:-;1550:33;:19;1574:8;1550:23;:33::i;:::-;1546:132;;;1598:26;;3030:42:279;3018:55;;3000:74;;1598:26:138;;2988:2:279;2973:18;1598:26:138;2823:257:279;1546:132:138;1652:19;;;;;;;;;;;;;;1686:201;1753:36;:19;1780:8;1753:26;:36::i;:::-;1749:134;;;1804:29;;3030:42:279;3018:55;;3000:74;;1804:29:138;;2988:2:279;2973:18;1804:29:138;2823:257:279;1749:134:138;1861:15;;;;;;;;;;;;;;1984:811:111;2071:16;2090:17;:5;514:4:199;503:16;497:23;;382:148;2090:17:111;2071:36;;2113:10;2126:14;:5;514:4:199;503:16;497:23;;382:148;2126:14:111;2113:27;;2151:6;:28;;2147:643;;2181:16;:46;;;;;;;;;;;;2147:643;;;2242:6;:32;;2238:552;;2276:20;:54;;;;;;;;;;2238:552;;;2345:6;:38;;2341:449;;2385:26;:34;;;;;;;;;;2341:449;;;2434:6;:33;;2430:360;;2469:21;:29;;;;;;;;;;;;2430:360;;;2513:6;:36;;2509:281;;2551:24;:32;;;;;;;;;;;;2509:281;;;2598:6;:42;;2594:196;;2642:30;:38;;;;;;;;;;;;2594:196;;;2695:6;:24;;2691:99;;514:4:199;503:16;;497:23;2721:12:111;:32;2691:99;;5562:109:38;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;8297:150::-;8367:4;8390:50;8395:3;8415:23;;;8390:4;:50::i;8615:156::-;8688:4;8711:53;8719:3;8739:23;;;8711:7;:53::i;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:38;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:38;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:38;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;14:184:279;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:777;245:5;298:3;291:4;283:6;279:17;275:27;265:55;;316:1;313;306:12;265:55;352:6;339:20;378:18;415:2;411;408:10;405:36;;;421:18;;:::i;:::-;555:2;549:9;617:4;609:13;;460:66;605:22;;;629:2;601:31;597:40;585:53;;;653:18;;;673:22;;;650:46;647:72;;;699:18;;:::i;:::-;739:10;735:2;728:22;774:2;766:6;759:18;820:3;813:4;808:2;800:6;796:15;792:26;789:35;786:55;;;837:1;834;827:12;786:55;901:2;894:4;886:6;882:17;875:4;867:6;863:17;850:54;948:1;941:4;936:2;928:6;924:15;920:26;913:37;968:6;959:15;;;;;;203:777;;;;:::o;985:456::-;1071:6;1079;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:52;;;1156:1;1153;1146:12;1108:52;1192:9;1179:23;1169:33;;1249:2;1238:9;1234:18;1221:32;1211:42;;1304:2;1293:9;1289:18;1276:32;1331:18;1323:6;1320:30;1317:50;;;1363:1;1360;1353:12;1317:50;1386:49;1427:7;1418:6;1407:9;1403:22;1386:49;:::i;:::-;1376:59;;;985:456;;;;;:::o;1446:309::-;1505:6;1558:2;1546:9;1537:7;1533:23;1529:32;1526:52;;;1574:1;1571;1564:12;1526:52;1613:9;1600:23;1663:42;1656:5;1652:54;1645:5;1642:65;1632:93;;1721:1;1718;1711:12;1952:681;2123:2;2175:21;;;2245:13;;2148:18;;;2267:22;;;2094:4;;2123:2;2346:15;;;;2320:2;2305:18;;;2094:4;2389:218;2403:6;2400:1;2397:13;2389:218;;;2468:13;;2483:42;2464:62;2452:75;;2582:15;;;;2547:12;;;;2425:1;2418:9;2389:218;;;-1:-1:-1;2624:3:279;;1952:681;-1:-1:-1;;;;;;1952:681:279:o;2638:180::-;2697:6;2750:2;2738:9;2729:7;2725:23;2721:32;2718:52;;;2766:1;2763;2756:12;2718:52;-1:-1:-1;2789:23:279;;2638:180;-1:-1:-1;2638:180:279:o;3343:388::-;3420:6;3428;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3533:9;3520:23;3510:33;;3594:2;3583:9;3579:18;3566:32;3621:18;3613:6;3610:30;3607:50;;;3653:1;3650;3643:12;3607:50;3676:49;3717:7;3708:6;3697:9;3693:22;3676:49;:::i;:::-;3666:59;;;3343:388;;;;;:::o;4220:605::-;4330:4;4359:2;4388;4377:9;4370:21;4420:6;4414:13;4463:6;4458:2;4447:9;4443:18;4436:34;4488:1;4498:140;4512:6;4509:1;4506:13;4498:140;;;4607:14;;;4603:23;;4597:30;4573:17;;;4592:2;4569:26;4562:66;4527:10;;4498:140;;;4502:3;4687:1;4682:2;4673:6;4662:9;4658:22;4654:31;4647:42;4816:2;4746:66;4741:2;4733:6;4729:15;4725:88;4714:9;4710:104;4706:113;4698:121;;;;4220:605;;;;:::o;4830:184::-;4900:6;4953:2;4941:9;4932:7;4928:23;4924:32;4921:52;;;4969:1;4966;4959:12;4921:52;-1:-1:-1;4992:16:279;;4830:184;-1:-1:-1;4830:184:279:o;5250:282::-;5317:9;;;5338:11;;;5335:191;;;5382:77;5379:1;5372:88;5483:4;5480:1;5473:15;5511:4;5508:1;5501:15;5537:184;5589:77;5586:1;5579:88;5686:4;5683:1;5676:15;5710:4;5707:1;5700:15;5726:184;5778:77;5775:1;5768:88;5875:4;5872:1;5865:15;5899:4;5896:1;5889:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "accountingEngine()": "961d45c4",
    "addAuthorization(address)": "35b28153",
    "authorizedAccounts()": "2e391876",
    "authorizedAccounts(address)": "24ba5884",
    "modifyParameters(bytes32,bytes)": "da8a4bb8",
    "modifyParameters(bytes32,bytes32,bytes)": "12f33526",
    "removeAuthorization(address)": "94f3f81d",
    "rewardAmount()": "f7b2a7be",
    "shouldWorkAuctionDebt()": "6e5d9d1a",
    "shouldWorkAuctionSurplus()": "5140d042",
    "shouldWorkPopDebtFromQueue()": "58d1141f",
    "shouldWorkTransferExtraSurplus()": "57fbd947",
    "stabilityFeeTreasury()": "72b6f12a",
    "workAuctionDebt()": "2781ef1c",
    "workAuctionSurplus()": "84820814",
    "workPopDebtFromQueue(uint256)": "5eadae8e",
    "workTransferExtraSurplus()": "063501fa"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountingEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stabilityFeeTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWorkable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnrecognizedCType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnrecognizedParam\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_param\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_cType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ModifyParameters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rewardedAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"name\":\"Rewarded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountingEngine\",\"outputs\":[{\"internalType\":\"contract IAccountingEngine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_cType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_param\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_param\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWorkAuctionDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWorkAuctionSurplus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWorkPopDebtFromQueue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWorkTransferExtraSurplus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityFeeTreasury\",\"outputs\":[{\"internalType\":\"contract IStabilityFeeTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workAuctionDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workAuctionSurplus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_debtBlockTimestamp\",\"type\":\"uint256\"}],\"name\":\"workPopDebtFromQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workTransferExtraSurplus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ModifyParameters(bytes32,bytes32,bytes)\":{\"details\":\"Event topic 1 is always a parameter, topic 2 can be empty (global params)\"}},\"kind\":\"dev\",\"methods\":{\"addAuthorization(address)\":{\"params\":{\"_account\":\"Account to add auth to\"}},\"authorizedAccounts()\":{\"returns\":{\"_accounts\":\"Array of authorized accounts\"}},\"authorizedAccounts(address)\":{\"returns\":{\"_authorized\":\"Whether the account is authorized or not\"}},\"modifyParameters(bytes32,bytes)\":{\"params\":{\"_data\":\"Encoded data to modify the parameter\",\"_param\":\"String identifier of the parameter to modify\"}},\"modifyParameters(bytes32,bytes32,bytes)\":{\"params\":{\"_cType\":\"String identifier of the collateral to modify\",\"_data\":\"Encoded data to modify the parameter\",\"_param\":\"String identifier of the parameter to modify\"}},\"removeAuthorization(address)\":{\"params\":{\"_account\":\"Account to remove auth from\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAuthorization(address)\":{\"notice\":\"Add auth to an account\"},\"authorizedAccounts()\":{\"notice\":\"Getter for the authorized accounts\"},\"authorizedAccounts(address)\":{\"notice\":\"Checks whether an account is authorized\"},\"modifyParameters(bytes32,bytes)\":{\"notice\":\"Set a new value for a global specific parameter\"},\"modifyParameters(bytes32,bytes32,bytes)\":{\"notice\":\"Set a new value for a collateral specific parameter\"},\"removeAuthorization(address)\":{\"notice\":\"Remove auth from an account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/jobs/AccountingJob.sol\":\"AccountingJob\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@contracts/=src/contracts/\",\":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":@interfaces/=src/interfaces/\",\":@libraries/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/contracts/\",\":@script/=src/script/\",\":@test/=src/test/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":isolmate/=lib/isolmate/src/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80\",\"dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"src/contracts/jobs/AccountingJob.sol\":{\"keccak256\":\"0x07bc8df07ae92185bea513d270d60df527a1abb6620a2c5996ab21316a0084f2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4c1295210870463ebbae92058bf0a1c0978035080831183749e382f0b5a9c6a\",\"dweb:/ipfs/QmThFKmgjdKjNJirvq2DooZpBpqghRLLjtWCzEA6tMmSLH\"]},\"src/contracts/jobs/Job.sol\":{\"keccak256\":\"0x54ef6ce0c7c486101ea41c87cc8e83c4b2db403dfdbb7106703733f12b56145d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1964f0997de23645c6106b40cc48436e2ffa15d03e62c7d3a7750abf4ee2ac3e\",\"dweb:/ipfs/QmVHFh8N2YGSWbpoAaoBagTRhWZ5wv7BmfDLzoVtGDW9Fu\"]},\"src/contracts/utils/Authorizable.sol\":{\"keccak256\":\"0xa1254f44e6dee9058ba5bb22cb580065bc5cfbc91663f5c1a943ad3544c316fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62d2048817aac6045f653610103e44d5bb5974d1b868c7b108670b86100c4809\",\"dweb:/ipfs/QmdX97PLN5Fghe56hLkjYFgm75Zj5ZatzCqCvY6KH8EqcR\"]},\"src/contracts/utils/Modifiable.sol\":{\"keccak256\":\"0x53a601053bb6dad4e3fcbfe98f72da763892544b60a2f1444d1c3c15c3a74382\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cb3df7e5ca62a674e41de7c2f5d02d855adf90d18fee3ee071d2b7b881d9b6c7\",\"dweb:/ipfs/QmQJSUWDX5iXXGchF2wEEYYWgHUzsxBDFz9tC7GvtCS6op\"]},\"src/interfaces/IAccountingEngine.sol\":{\"keccak256\":\"0xf29ed859f089fd59c1df21eccee1bd9365ffbd71d113bcfa2eee686818cde0ad\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6c6bce75482815d9ddd911de8fb87d9147e834ff97756cf57d0a277d2048ba81\",\"dweb:/ipfs/QmdNFvhHsPvPLutaMN42JqmF8pEMVRA1D3EFnMyP3RW2KJ\"]},\"src/interfaces/ICommonSurplusAuctionHouse.sol\":{\"keccak256\":\"0x5023f0e0150190a268743bd6b0503dcf7af7a651993e770180f131414c778b66\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aeb456bfcd52df696d59e2a71c16b3692d88b36a1cdf4dd66a9f9c3f83d7dfac\",\"dweb:/ipfs/QmavSgsASecEeUNTJdwXFfpF8zhaBCGQvyjTUqrECK2zwX\"]},\"src/interfaces/IDebtAuctionHouse.sol\":{\"keccak256\":\"0x5c74a9486f8bd9668fa674b09102e12fcee3e75ffcacfadf635d91206db99e89\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://851b068308336bc94d710e5b7759cf91accb63c1f401de73944997047ec7cfa4\",\"dweb:/ipfs/QmRaNZwU6wshVnUtZkY5stMeaZreR9fs9gpjm3yBDZFp2y\"]},\"src/interfaces/ISAFEEngine.sol\":{\"keccak256\":\"0x347286a6d65429b77100d296db851a696b394cc1ce00871dff984b216381a266\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d3edfb9011e6d6fe0a76ca0da2b2b4b5b282c48dc0038ad693e91704e5435f8f\",\"dweb:/ipfs/QmUAxHsDMi2FMz2ZaRXsShHHvMtiEt2xBoPhEy8oV5LZz7\"]},\"src/interfaces/IStabilityFeeTreasury.sol\":{\"keccak256\":\"0xbc221e3c132ba79e88234da6a3fd5a50e639b85a11024a9b184d08616127cb0f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://26f5165568f1f5b92a5edb26c9df660c685ece8e44729d5d384a602f4585f3a4\",\"dweb:/ipfs/QmP4P3ETiPrrxXi2PXXfuvrhhqTqWuTBtdjRFk8dPjhS4a\"]},\"src/interfaces/ISurplusAuctionHouse.sol\":{\"keccak256\":\"0xbba12efef8881bfc7828bab5b3d1c550aecdf8a886409863d63d799260dc72f7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a7f9e724a5a092d8b35f0cf33a273efe79b9311c0266ae7f5a845b7555b1fa5f\",\"dweb:/ipfs/QmTzrxd6HBhsPvC6oGwy1gYbZgpCxbiKpvt9eEms3WzSB7\"]},\"src/interfaces/jobs/IAccountingJob.sol\":{\"keccak256\":\"0xf209d7198c6f0f7b4f91529dbbe4932ff6d97698fa69ebabb1cad3fa4a6d4326\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb0364a5dc463b6e8ea7a6b82d39f83823e6b6e8bb6bc8134033790ea73992cd\",\"dweb:/ipfs/Qmcwf6FkYujcJGWRVqDiNHShFNVvWp6KUKJCM54sCYU4qX\"]},\"src/interfaces/jobs/IJob.sol\":{\"keccak256\":\"0xd2ce088991ed94f7a9566c0bdebc9073408154fc8becc5ff1d93746aff60a1dd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c85980d4e3a7cb2376e115187d95fb76d4f8acbd3cb0414f5a4bd523f0ac147b\",\"dweb:/ipfs/QmVnmLXaXW9WJFB7EaugXoWrJ66En9kHEquhtcNZzTvsb9\"]},\"src/interfaces/tokens/IProtocolToken.sol\":{\"keccak256\":\"0xbe098cd5f116ad4c2bc91735fc8a675e6d7d316a6df2ea17f664bda67cef7213\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf1b001389b37b8797fe90ce6a500bab4083dfe40ad38f61e04ed276ed73d67c\",\"dweb:/ipfs/QmRGBurNEeFBHjCdP784XYK11HMUw88sHxKhH3GvXMSKMB\"]},\"src/interfaces/tokens/ISystemCoin.sol\":{\"keccak256\":\"0xfbef3d49f70364b20f16a6180fd8f3d14b74ea387f0b4d454758cad7d2ac2293\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3fb7d50131da67eba99f5255e2ead7693fc6e252c9dc4b77e67db99759a84fc\",\"dweb:/ipfs/QmPrFYwyFncqvcVamZWkVQzfSHLyd5kjUnaWo4aAeA6ht3\"]},\"src/interfaces/utils/IAuthorizable.sol\":{\"keccak256\":\"0x773005e00777d5ae2be7ed7ce7d528d45153f3ca842ac2194230e9576bf9a152\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://189474fdeac1a7a1746e512b7b5d1c27b2c3c35c40213cb78ed1b342541a4f8d\",\"dweb:/ipfs/QmNec3XYdTpkzKif1rkGAkzywQEGLt2EenBe9C2KfoDyRW\"]},\"src/interfaces/utils/ICoinJoin.sol\":{\"keccak256\":\"0x5f34980c4642fccd1c8b7ef1c8c743149bc06f9f5c7617b4dd5fe01db5a8eecf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b69f73322ea720e07f7105b781a0668af18e0fde4c7601bfd8af125d1f930550\",\"dweb:/ipfs/QmbcBrnorqqM7yjytr5j6JTdP52F6zbzBKG6NeioPC5GTF\"]},\"src/interfaces/utils/IDisableable.sol\":{\"keccak256\":\"0xcc1b0e16336bc9d2cb0eb577931edfacf1b9efce6c14ea15d1ffa8db47691a5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ce8ff1228b3af1218e27e1020b4166b88adade0a7d87f6cd6f8ad5b0d026d42\",\"dweb:/ipfs/QmS3we5yCr2979GGtM2UU6Wuo7u6LQvYXJH7yh33ksC9yY\"]},\"src/interfaces/utils/IModifiable.sol\":{\"keccak256\":\"0x57c624f4761abdd5e0e65775fc494c58014d52d74e5465943c0200222da689a1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cabcdfaefb9852eb46668b12b65a54f85f6c6a0af5a9098951d618e263e1342f\",\"dweb:/ipfs/Qmd6MLqxve8fZmBWP2SherwEDBZMrn7dWoQPTp41CoSuNQ\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0x7335a4447ce2a884af29484bd117a3d69e38aa7d176e31218ee0f01a9eb10fcf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5225da14fa49472b819aaa6975379c25e988d6b7d1bcedd687dc8f3107b36b6c\",\"dweb:/ipfs/QmaUCLQDsLMuGgjpb2d2X9qVN48iMviHDT1TJAE4zeh1ve\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_accountingEngine",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stabilityFeeTreasury",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotWorkable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnrecognizedCType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnrecognizedParam"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddAuthorization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_param",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "_cType",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyParameters",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveAuthorization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardedAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Rewarded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountingEngine",
          "outputs": [
            {
              "internalType": "contract IAccountingEngine",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAuthorization"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAccounts",
          "outputs": [
            {
              "internalType": "bool",
              "name": "_authorized",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_cType",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_param",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyParameters"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_param",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyParameters"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAuthorization"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldWorkAuctionDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldWorkAuctionSurplus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldWorkPopDebtFromQueue",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldWorkTransferExtraSurplus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stabilityFeeTreasury",
          "outputs": [
            {
              "internalType": "contract IStabilityFeeTreasury",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "workAuctionDebt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "workAuctionSurplus"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_debtBlockTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "workPopDebtFromQueue"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "workTransferExtraSurplus"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAuthorization(address)": {
            "params": {
              "_account": "Account to add auth to"
            }
          },
          "authorizedAccounts()": {
            "returns": {
              "_accounts": "Array of authorized accounts"
            }
          },
          "authorizedAccounts(address)": {
            "returns": {
              "_authorized": "Whether the account is authorized or not"
            }
          },
          "modifyParameters(bytes32,bytes)": {
            "params": {
              "_data": "Encoded data to modify the parameter",
              "_param": "String identifier of the parameter to modify"
            }
          },
          "modifyParameters(bytes32,bytes32,bytes)": {
            "params": {
              "_cType": "String identifier of the collateral to modify",
              "_data": "Encoded data to modify the parameter",
              "_param": "String identifier of the parameter to modify"
            }
          },
          "removeAuthorization(address)": {
            "params": {
              "_account": "Account to remove auth from"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addAuthorization(address)": {
            "notice": "Add auth to an account"
          },
          "authorizedAccounts()": {
            "notice": "Getter for the authorized accounts"
          },
          "authorizedAccounts(address)": {
            "notice": "Checks whether an account is authorized"
          },
          "modifyParameters(bytes32,bytes)": {
            "notice": "Set a new value for a global specific parameter"
          },
          "modifyParameters(bytes32,bytes32,bytes)": {
            "notice": "Set a new value for a collateral specific parameter"
          },
          "removeAuthorization(address)": {
            "notice": "Remove auth from an account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@contracts/=src/contracts/",
        ":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/",
        ":@interfaces/=src/interfaces/",
        ":@libraries/=src/libraries/",
        ":@openzeppelin/=node_modules/@openzeppelin/contracts/",
        ":@script/=src/script/",
        ":@test/=src/test/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":isolmate/=lib/isolmate/src/",
        ":prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/jobs/AccountingJob.sol": "AccountingJob"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9",
        "urls": [
          "bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80",
          "dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "src/contracts/jobs/AccountingJob.sol": {
        "keccak256": "0x07bc8df07ae92185bea513d270d60df527a1abb6620a2c5996ab21316a0084f2",
        "urls": [
          "bzz-raw://b4c1295210870463ebbae92058bf0a1c0978035080831183749e382f0b5a9c6a",
          "dweb:/ipfs/QmThFKmgjdKjNJirvq2DooZpBpqghRLLjtWCzEA6tMmSLH"
        ],
        "license": "GPL-3.0"
      },
      "src/contracts/jobs/Job.sol": {
        "keccak256": "0x54ef6ce0c7c486101ea41c87cc8e83c4b2db403dfdbb7106703733f12b56145d",
        "urls": [
          "bzz-raw://1964f0997de23645c6106b40cc48436e2ffa15d03e62c7d3a7750abf4ee2ac3e",
          "dweb:/ipfs/QmVHFh8N2YGSWbpoAaoBagTRhWZ5wv7BmfDLzoVtGDW9Fu"
        ],
        "license": "GPL-3.0"
      },
      "src/contracts/utils/Authorizable.sol": {
        "keccak256": "0xa1254f44e6dee9058ba5bb22cb580065bc5cfbc91663f5c1a943ad3544c316fe",
        "urls": [
          "bzz-raw://62d2048817aac6045f653610103e44d5bb5974d1b868c7b108670b86100c4809",
          "dweb:/ipfs/QmdX97PLN5Fghe56hLkjYFgm75Zj5ZatzCqCvY6KH8EqcR"
        ],
        "license": "GPL-3.0"
      },
      "src/contracts/utils/Modifiable.sol": {
        "keccak256": "0x53a601053bb6dad4e3fcbfe98f72da763892544b60a2f1444d1c3c15c3a74382",
        "urls": [
          "bzz-raw://cb3df7e5ca62a674e41de7c2f5d02d855adf90d18fee3ee071d2b7b881d9b6c7",
          "dweb:/ipfs/QmQJSUWDX5iXXGchF2wEEYYWgHUzsxBDFz9tC7GvtCS6op"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IAccountingEngine.sol": {
        "keccak256": "0xf29ed859f089fd59c1df21eccee1bd9365ffbd71d113bcfa2eee686818cde0ad",
        "urls": [
          "bzz-raw://6c6bce75482815d9ddd911de8fb87d9147e834ff97756cf57d0a277d2048ba81",
          "dweb:/ipfs/QmdNFvhHsPvPLutaMN42JqmF8pEMVRA1D3EFnMyP3RW2KJ"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ICommonSurplusAuctionHouse.sol": {
        "keccak256": "0x5023f0e0150190a268743bd6b0503dcf7af7a651993e770180f131414c778b66",
        "urls": [
          "bzz-raw://aeb456bfcd52df696d59e2a71c16b3692d88b36a1cdf4dd66a9f9c3f83d7dfac",
          "dweb:/ipfs/QmavSgsASecEeUNTJdwXFfpF8zhaBCGQvyjTUqrECK2zwX"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IDebtAuctionHouse.sol": {
        "keccak256": "0x5c74a9486f8bd9668fa674b09102e12fcee3e75ffcacfadf635d91206db99e89",
        "urls": [
          "bzz-raw://851b068308336bc94d710e5b7759cf91accb63c1f401de73944997047ec7cfa4",
          "dweb:/ipfs/QmRaNZwU6wshVnUtZkY5stMeaZreR9fs9gpjm3yBDZFp2y"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISAFEEngine.sol": {
        "keccak256": "0x347286a6d65429b77100d296db851a696b394cc1ce00871dff984b216381a266",
        "urls": [
          "bzz-raw://d3edfb9011e6d6fe0a76ca0da2b2b4b5b282c48dc0038ad693e91704e5435f8f",
          "dweb:/ipfs/QmUAxHsDMi2FMz2ZaRXsShHHvMtiEt2xBoPhEy8oV5LZz7"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IStabilityFeeTreasury.sol": {
        "keccak256": "0xbc221e3c132ba79e88234da6a3fd5a50e639b85a11024a9b184d08616127cb0f",
        "urls": [
          "bzz-raw://26f5165568f1f5b92a5edb26c9df660c685ece8e44729d5d384a602f4585f3a4",
          "dweb:/ipfs/QmP4P3ETiPrrxXi2PXXfuvrhhqTqWuTBtdjRFk8dPjhS4a"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISurplusAuctionHouse.sol": {
        "keccak256": "0xbba12efef8881bfc7828bab5b3d1c550aecdf8a886409863d63d799260dc72f7",
        "urls": [
          "bzz-raw://a7f9e724a5a092d8b35f0cf33a273efe79b9311c0266ae7f5a845b7555b1fa5f",
          "dweb:/ipfs/QmTzrxd6HBhsPvC6oGwy1gYbZgpCxbiKpvt9eEms3WzSB7"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/jobs/IAccountingJob.sol": {
        "keccak256": "0xf209d7198c6f0f7b4f91529dbbe4932ff6d97698fa69ebabb1cad3fa4a6d4326",
        "urls": [
          "bzz-raw://bb0364a5dc463b6e8ea7a6b82d39f83823e6b6e8bb6bc8134033790ea73992cd",
          "dweb:/ipfs/Qmcwf6FkYujcJGWRVqDiNHShFNVvWp6KUKJCM54sCYU4qX"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/jobs/IJob.sol": {
        "keccak256": "0xd2ce088991ed94f7a9566c0bdebc9073408154fc8becc5ff1d93746aff60a1dd",
        "urls": [
          "bzz-raw://c85980d4e3a7cb2376e115187d95fb76d4f8acbd3cb0414f5a4bd523f0ac147b",
          "dweb:/ipfs/QmVnmLXaXW9WJFB7EaugXoWrJ66En9kHEquhtcNZzTvsb9"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/tokens/IProtocolToken.sol": {
        "keccak256": "0xbe098cd5f116ad4c2bc91735fc8a675e6d7d316a6df2ea17f664bda67cef7213",
        "urls": [
          "bzz-raw://bf1b001389b37b8797fe90ce6a500bab4083dfe40ad38f61e04ed276ed73d67c",
          "dweb:/ipfs/QmRGBurNEeFBHjCdP784XYK11HMUw88sHxKhH3GvXMSKMB"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/tokens/ISystemCoin.sol": {
        "keccak256": "0xfbef3d49f70364b20f16a6180fd8f3d14b74ea387f0b4d454758cad7d2ac2293",
        "urls": [
          "bzz-raw://b3fb7d50131da67eba99f5255e2ead7693fc6e252c9dc4b77e67db99759a84fc",
          "dweb:/ipfs/QmPrFYwyFncqvcVamZWkVQzfSHLyd5kjUnaWo4aAeA6ht3"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IAuthorizable.sol": {
        "keccak256": "0x773005e00777d5ae2be7ed7ce7d528d45153f3ca842ac2194230e9576bf9a152",
        "urls": [
          "bzz-raw://189474fdeac1a7a1746e512b7b5d1c27b2c3c35c40213cb78ed1b342541a4f8d",
          "dweb:/ipfs/QmNec3XYdTpkzKif1rkGAkzywQEGLt2EenBe9C2KfoDyRW"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/ICoinJoin.sol": {
        "keccak256": "0x5f34980c4642fccd1c8b7ef1c8c743149bc06f9f5c7617b4dd5fe01db5a8eecf",
        "urls": [
          "bzz-raw://b69f73322ea720e07f7105b781a0668af18e0fde4c7601bfd8af125d1f930550",
          "dweb:/ipfs/QmbcBrnorqqM7yjytr5j6JTdP52F6zbzBKG6NeioPC5GTF"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IDisableable.sol": {
        "keccak256": "0xcc1b0e16336bc9d2cb0eb577931edfacf1b9efce6c14ea15d1ffa8db47691a5f",
        "urls": [
          "bzz-raw://2ce8ff1228b3af1218e27e1020b4166b88adade0a7d87f6cd6f8ad5b0d026d42",
          "dweb:/ipfs/QmS3we5yCr2979GGtM2UU6Wuo7u6LQvYXJH7yh33ksC9yY"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/utils/IModifiable.sol": {
        "keccak256": "0x57c624f4761abdd5e0e65775fc494c58014d52d74e5465943c0200222da689a1",
        "urls": [
          "bzz-raw://cabcdfaefb9852eb46668b12b65a54f85f6c6a0af5a9098951d618e263e1342f",
          "dweb:/ipfs/Qmd6MLqxve8fZmBWP2SherwEDBZMrn7dWoQPTp41CoSuNQ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0x7335a4447ce2a884af29484bd117a3d69e38aa7d176e31218ee0f01a9eb10fcf",
        "urls": [
          "bzz-raw://5225da14fa49472b819aaa6975379c25e988d6b7d1bcedd687dc8f3107b36b6c",
          "dweb:/ipfs/QmaUCLQDsLMuGgjpb2d2X9qVN48iMviHDT1TJAE4zeh1ve"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/jobs/AccountingJob.sol",
    "id": 52123,
    "exportedSymbols": {
      "AccountingJob": [52122],
      "Authorizable": [59737],
      "Encoding": [64917],
      "IAccountingEngine": [60682],
      "IAccountingJob": [63386],
      "IStabilityFeeTreasury": [62550],
      "Job": [52172],
      "Modifiable": [60391]
    },
    "nodeType": "SourceUnit",
    "src": "36:2762:111",
    "nodes": [
      {
        "id": 51888,
        "nodeType": "PragmaDirective",
        "src": "36:23:111",
        "nodes": [],
        "literals": ["solidity", "0.8", ".19"]
      },
      {
        "id": 51890,
        "nodeType": "ImportDirective",
        "src": "61:67:111",
        "nodes": [],
        "absolutePath": "src/interfaces/jobs/IAccountingJob.sol",
        "file": "@interfaces/jobs/IAccountingJob.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 63387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51889,
              "name": "IAccountingJob",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63386,
              "src": "69:14:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51892,
        "nodeType": "ImportDirective",
        "src": "129:68:111",
        "nodes": [],
        "absolutePath": "src/interfaces/IAccountingEngine.sol",
        "file": "@interfaces/IAccountingEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 60683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51891,
              "name": "IAccountingEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60682,
              "src": "137:17:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51894,
        "nodeType": "ImportDirective",
        "src": "198:76:111",
        "nodes": [],
        "absolutePath": "src/interfaces/IStabilityFeeTreasury.sol",
        "file": "@interfaces/IStabilityFeeTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 62551,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51893,
              "name": "IStabilityFeeTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62550,
              "src": "206:21:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51896,
        "nodeType": "ImportDirective",
        "src": "276:44:111",
        "nodes": [],
        "absolutePath": "src/contracts/jobs/Job.sol",
        "file": "@contracts/jobs/Job.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 52173,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51895,
              "name": "Job",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52172,
              "src": "284:3:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51898,
        "nodeType": "ImportDirective",
        "src": "322:63:111",
        "nodes": [],
        "absolutePath": "src/contracts/utils/Authorizable.sol",
        "file": "@contracts/utils/Authorizable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 59738,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51897,
              "name": "Authorizable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59737,
              "src": "330:12:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51900,
        "nodeType": "ImportDirective",
        "src": "386:59:111",
        "nodes": [],
        "absolutePath": "src/contracts/utils/Modifiable.sol",
        "file": "@contracts/utils/Modifiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 60392,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51899,
              "name": "Modifiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60391,
              "src": "394:10:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51902,
        "nodeType": "ImportDirective",
        "src": "447:49:111",
        "nodes": [],
        "absolutePath": "src/libraries/Encoding.sol",
        "file": "@libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52123,
        "sourceUnit": 64918,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51901,
              "name": "Encoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64917,
              "src": "455:8:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52122,
        "nodeType": "ContractDefinition",
        "src": "498:2299:111",
        "nodes": [
          {
            "id": 51913,
            "nodeType": "UsingForDirective",
            "src": "574:25:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 51911,
              "name": "Encoding",
              "nameLocations": ["580:8:111"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64917,
              "src": "580:8:111"
            },
            "typeName": {
              "id": 51912,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "593:5:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 51915,
            "nodeType": "VariableDeclaration",
            "src": "621:38:111",
            "nodes": [],
            "baseFunctions": [63350],
            "constant": false,
            "functionSelector": "58d1141f",
            "mutability": "mutable",
            "name": "shouldWorkPopDebtFromQueue",
            "nameLocation": "633:26:111",
            "scope": 52122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 51914,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "621:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51917,
            "nodeType": "VariableDeclaration",
            "src": "663:33:111",
            "nodes": [],
            "baseFunctions": [63355],
            "constant": false,
            "functionSelector": "6e5d9d1a",
            "mutability": "mutable",
            "name": "shouldWorkAuctionDebt",
            "nameLocation": "675:21:111",
            "scope": 52122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 51916,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "663:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51919,
            "nodeType": "VariableDeclaration",
            "src": "700:36:111",
            "nodes": [],
            "baseFunctions": [63360],
            "constant": false,
            "functionSelector": "5140d042",
            "mutability": "mutable",
            "name": "shouldWorkAuctionSurplus",
            "nameLocation": "712:24:111",
            "scope": 52122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 51918,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "700:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51921,
            "nodeType": "VariableDeclaration",
            "src": "740:42:111",
            "nodes": [],
            "baseFunctions": [63365],
            "constant": false,
            "functionSelector": "57fbd947",
            "mutability": "mutable",
            "name": "shouldWorkTransferExtraSurplus",
            "nameLocation": "752:30:111",
            "scope": 52122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 51920,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "740:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51924,
            "nodeType": "VariableDeclaration",
            "src": "809:41:111",
            "nodes": [],
            "baseFunctions": [63371],
            "constant": false,
            "functionSelector": "961d45c4",
            "mutability": "mutable",
            "name": "accountingEngine",
            "nameLocation": "834:16:111",
            "scope": 52122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
              "typeString": "contract IAccountingEngine"
            },
            "typeName": {
              "id": 51923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51922,
                "name": "IAccountingEngine",
                "nameLocations": ["809:17:111"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60682,
                "src": "809:17:111"
              },
              "referencedDeclaration": 60682,
              "src": "809:17:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                "typeString": "contract IAccountingEngine"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51964,
            "nodeType": "FunctionDefinition",
            "src": "873:396:111",
            "nodes": [],
            "body": {
              "id": 51963,
              "nodeType": "Block",
              "src": "1049:220:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 51945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51941,
                      "name": "accountingEngine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51924,
                      "src": "1055:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                        "typeString": "contract IAccountingEngine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51943,
                          "name": "_accountingEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51926,
                          "src": "1092:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51942,
                        "name": "IAccountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60682,
                        "src": "1074:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAccountingEngine_$60682_$",
                          "typeString": "type(contract IAccountingEngine)"
                        }
                      },
                      "id": 51944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1074:36:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                        "typeString": "contract IAccountingEngine"
                      }
                    },
                    "src": "1055:55:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                      "typeString": "contract IAccountingEngine"
                    }
                  },
                  "id": 51946,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:55:111"
                },
                {
                  "expression": {
                    "id": 51949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51947,
                      "name": "shouldWorkPopDebtFromQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51915,
                      "src": "1117:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1146:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1117:33:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51950,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:33:111"
                },
                {
                  "expression": {
                    "id": 51953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51951,
                      "name": "shouldWorkAuctionDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51917,
                      "src": "1156:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1180:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1156:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51954,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:28:111"
                },
                {
                  "expression": {
                    "id": 51957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51955,
                      "name": "shouldWorkAuctionSurplus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51919,
                      "src": "1190:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1217:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1190:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51958,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:31:111"
                },
                {
                  "expression": {
                    "id": 51961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51959,
                      "name": "shouldWorkTransferExtraSurplus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51921,
                      "src": "1227:30:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1260:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1227:37:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51962,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:37:111"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51933,
                    "name": "_stabilityFeeTreasury",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51928,
                    "src": "986:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 51934,
                    "name": "_rewardAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51930,
                    "src": "1009:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 51935,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51932,
                  "name": "Job",
                  "nameLocations": ["982:3:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52172,
                  "src": "982:3:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "982:41:111"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 51937,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1037:3:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1041:6:111",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1037:10:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 51939,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51936,
                  "name": "Authorizable",
                  "nameLocations": ["1024:12:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59737,
                  "src": "1024:12:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1024:24:111"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51926,
                  "mutability": "mutable",
                  "name": "_accountingEngine",
                  "nameLocation": "898:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 51964,
                  "src": "890:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51928,
                  "mutability": "mutable",
                  "name": "_stabilityFeeTreasury",
                  "nameLocation": "929:21:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 51964,
                  "src": "921:29:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51930,
                  "mutability": "mutable",
                  "name": "_rewardAmount",
                  "nameLocation": "964:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 51964,
                  "src": "956:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:97:111"
            },
            "returnParameters": {
              "id": 51940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51984,
            "nodeType": "FunctionDefinition",
            "src": "1290:199:111",
            "nodes": [],
            "body": {
              "id": 51983,
              "nodeType": "Block",
              "src": "1365:124:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1375:27:111",
                    "subExpression": {
                      "id": 51971,
                      "name": "shouldWorkPopDebtFromQueue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51915,
                      "src": "1376:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51976,
                  "nodeType": "IfStatement",
                  "src": "1371:53:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51973,
                        "name": "NotWorkable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63398,
                        "src": "1411:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 51974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1411:13:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51975,
                    "nodeType": "RevertStatement",
                    "src": "1404:20:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51980,
                        "name": "_debtBlockTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51966,
                        "src": "1464:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51977,
                        "name": "accountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51924,
                        "src": "1430:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "id": 51979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1447:16:111",
                      "memberName": "popDebtFromQueue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60670,
                      "src": "1430:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 51981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:54:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51982,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:54:111"
                }
              ]
            },
            "baseFunctions": [63376],
            "functionSelector": "5eadae8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51969,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51968,
                  "name": "reward",
                  "nameLocations": ["1358:6:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52171,
                  "src": "1358:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1358:6:111"
              }
            ],
            "name": "workPopDebtFromQueue",
            "nameLocation": "1299:20:111",
            "parameters": {
              "id": 51967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51966,
                  "mutability": "mutable",
                  "name": "_debtBlockTimestamp",
                  "nameLocation": "1328:19:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 51984,
                  "src": "1320:27:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:29:111"
            },
            "returnParameters": {
              "id": 51970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52001,
            "nodeType": "FunctionDefinition",
            "src": "1493:138:111",
            "nodes": [],
            "body": {
              "id": 52000,
              "nodeType": "Block",
              "src": "1536:95:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1546:22:111",
                    "subExpression": {
                      "id": 51989,
                      "name": "shouldWorkAuctionDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51917,
                      "src": "1547:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51994,
                  "nodeType": "IfStatement",
                  "src": "1542:48:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 51991,
                        "name": "NotWorkable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63398,
                        "src": "1577:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 51992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1577:13:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 51993,
                    "nodeType": "RevertStatement",
                    "src": "1570:20:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51995,
                        "name": "accountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51924,
                        "src": "1596:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "id": 51997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1613:11:111",
                      "memberName": "auctionDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60650,
                      "src": "1596:28:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 51998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51999,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:30:111"
                }
              ]
            },
            "baseFunctions": [63379],
            "functionSelector": "2781ef1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51986,
                  "name": "reward",
                  "nameLocations": ["1529:6:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52171,
                  "src": "1529:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1529:6:111"
              }
            ],
            "name": "workAuctionDebt",
            "nameLocation": "1502:15:111",
            "parameters": {
              "id": 51985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:2:111"
            },
            "returnParameters": {
              "id": 51988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52018,
            "nodeType": "FunctionDefinition",
            "src": "1635:147:111",
            "nodes": [],
            "body": {
              "id": 52017,
              "nodeType": "Block",
              "src": "1681:101:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 52007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1691:25:111",
                    "subExpression": {
                      "id": 52006,
                      "name": "shouldWorkAuctionSurplus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51919,
                      "src": "1692:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52011,
                  "nodeType": "IfStatement",
                  "src": "1687:51:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 52008,
                        "name": "NotWorkable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63398,
                        "src": "1725:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 52009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1725:13:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 52010,
                    "nodeType": "RevertStatement",
                    "src": "1718:20:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52012,
                        "name": "accountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51924,
                        "src": "1744:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "id": 52014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1761:14:111",
                      "memberName": "auctionSurplus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60655,
                      "src": "1744:31:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 52015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52016,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:33:111"
                }
              ]
            },
            "baseFunctions": [63382],
            "functionSelector": "84820814",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52004,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52003,
                  "name": "reward",
                  "nameLocations": ["1674:6:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52171,
                  "src": "1674:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1674:6:111"
              }
            ],
            "name": "workAuctionSurplus",
            "nameLocation": "1644:18:111",
            "parameters": {
              "id": 52002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1662:2:111"
            },
            "returnParameters": {
              "id": 52005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1681:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52035,
            "nodeType": "FunctionDefinition",
            "src": "1786:165:111",
            "nodes": [],
            "body": {
              "id": 52034,
              "nodeType": "Block",
              "src": "1838:113:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 52024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1848:31:111",
                    "subExpression": {
                      "id": 52023,
                      "name": "shouldWorkTransferExtraSurplus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51921,
                      "src": "1849:30:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52028,
                  "nodeType": "IfStatement",
                  "src": "1844:57:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 52025,
                        "name": "NotWorkable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63398,
                        "src": "1888:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 52026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1888:13:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 52027,
                    "nodeType": "RevertStatement",
                    "src": "1881:20:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52029,
                        "name": "accountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51924,
                        "src": "1907:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "id": 52031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1924:20:111",
                      "memberName": "transferExtraSurplus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60678,
                      "src": "1907:37:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 52032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52033,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:39:111"
                }
              ]
            },
            "baseFunctions": [63385],
            "functionSelector": "063501fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52021,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52020,
                  "name": "reward",
                  "nameLocations": ["1831:6:111"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52171,
                  "src": "1831:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1831:6:111"
              }
            ],
            "name": "workTransferExtraSurplus",
            "nameLocation": "1795:24:111",
            "parameters": {
              "id": 52019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:111"
            },
            "returnParameters": {
              "id": 52022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52121,
            "nodeType": "FunctionDefinition",
            "src": "1984:811:111",
            "nodes": [],
            "body": {
              "id": 52120,
              "nodeType": "Block",
              "src": "2065:730:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [52044],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52044,
                      "mutability": "mutable",
                      "name": "_address",
                      "nameLocation": "2079:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 52120,
                      "src": "2071:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 52043,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2071:7:111",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52048,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52045,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52039,
                        "src": "2090:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 52046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2096:9:111",
                      "memberName": "toAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64907,
                      "src": "2090:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address)"
                      }
                    },
                    "id": 52047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2071:36:111"
                },
                {
                  "assignments": [52050],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52050,
                      "mutability": "mutable",
                      "name": "_bool",
                      "nameLocation": "2118:5:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 52120,
                      "src": "2113:10:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 52049,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2113:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52054,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52051,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52039,
                        "src": "2126:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 52052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2132:6:111",
                      "memberName": "toBool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64916,
                      "src": "2126:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$attached_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (bool)"
                      }
                    },
                    "id": 52053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2113:27:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 52057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52055,
                      "name": "_param",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52037,
                      "src": "2151:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "6163636f756e74696e67456e67696e65",
                      "id": 52056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2161:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_640f1eae10a435f71615350eb8953fba850f16efd40157f7e6c8c08989230fad",
                        "typeString": "literal_string \"accountingEngine\""
                      },
                      "value": "accountingEngine"
                    },
                    "src": "2151:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 52066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 52064,
                        "name": "_param",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52037,
                        "src": "2242:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "73746162696c6974794665655472656173757279",
                        "id": 52065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2252:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7263bc073da45d5349e55d96a21efe5646085188790088b4d317c9ca0d4a43c3",
                          "typeString": "literal_string \"stabilityFeeTreasury\""
                        },
                        "value": "stabilityFeeTreasury"
                      },
                      "src": "2242:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 52075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52073,
                          "name": "_param",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52037,
                          "src": "2345:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "73686f756c64576f726b506f704465627446726f6d5175657565",
                          "id": 52074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2355:28:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0353e45b81191abe8bc63fcaaa5bcf50b7499a7cbd0dec3a614bdff4541c8b1b",
                            "typeString": "literal_string \"shouldWorkPopDebtFromQueue\""
                          },
                          "value": "shouldWorkPopDebtFromQueue"
                        },
                        "src": "2345:38:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 52082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 52080,
                            "name": "_param",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52037,
                            "src": "2434:6:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "73686f756c64576f726b41756374696f6e44656274",
                            "id": 52081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2444:23:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2cb94182234fec8460391d2beffbe8bf1dd9218e0d91b3c7400ed8ee2bab52ad",
                              "typeString": "literal_string \"shouldWorkAuctionDebt\""
                            },
                            "value": "shouldWorkAuctionDebt"
                          },
                          "src": "2434:33:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 52089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 52087,
                              "name": "_param",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52037,
                              "src": "2513:6:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "73686f756c64576f726b41756374696f6e537572706c7573",
                              "id": 52088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2523:26:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a39c873dc28c35b1c955413f32954f4625ff3dded8deec061201c5252e624d24",
                                "typeString": "literal_string \"shouldWorkAuctionSurplus\""
                              },
                              "value": "shouldWorkAuctionSurplus"
                            },
                            "src": "2513:36:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 52096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 52094,
                                "name": "_param",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52037,
                                "src": "2598:6:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "73686f756c64576f726b5472616e736665724578747261537572706c7573",
                                "id": 52095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2608:32:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7ae7739a8a2c64574d2de730f977bdaad35c4bc657e25ebddcca7680fbf29507",
                                  "typeString": "literal_string \"shouldWorkTransferExtraSurplus\""
                                },
                                "value": "shouldWorkTransferExtraSurplus"
                              },
                              "src": "2598:42:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 52103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 52101,
                                  "name": "_param",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52037,
                                  "src": "2695:6:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "726577617264416d6f756e74",
                                  "id": 52102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2705:14:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4740461e62819f1ef074962c69dbaba70d9affaed3524574199f2dbfdc157725",
                                    "typeString": "literal_string \"rewardAmount\""
                                  },
                                  "value": "rewardAmount"
                                },
                                "src": "2695:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 52110,
                                    "name": "UnrecognizedParam",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64578,
                                    "src": "2771:17:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 52111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2771:19:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 52112,
                                "nodeType": "RevertStatement",
                                "src": "2764:26:111"
                              },
                              "id": 52113,
                              "nodeType": "IfStatement",
                              "src": "2691:99:111",
                              "trueBody": {
                                "expression": {
                                  "id": 52108,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 52104,
                                    "name": "rewardAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52132,
                                    "src": "2721:12:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 52105,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 52039,
                                        "src": "2736:5:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 52106,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2742:9:111",
                                      "memberName": "toUint256",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64889,
                                      "src": "2736:15:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$attached_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) pure returns (uint256)"
                                      }
                                    },
                                    "id": 52107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2736:17:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2721:32:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 52109,
                                "nodeType": "ExpressionStatement",
                                "src": "2721:32:111"
                              }
                            },
                            "id": 52114,
                            "nodeType": "IfStatement",
                            "src": "2594:196:111",
                            "trueBody": {
                              "expression": {
                                "id": 52099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 52097,
                                  "name": "shouldWorkTransferExtraSurplus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51921,
                                  "src": "2642:30:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 52098,
                                  "name": "_bool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52050,
                                  "src": "2675:5:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2642:38:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 52100,
                              "nodeType": "ExpressionStatement",
                              "src": "2642:38:111"
                            }
                          },
                          "id": 52115,
                          "nodeType": "IfStatement",
                          "src": "2509:281:111",
                          "trueBody": {
                            "expression": {
                              "id": 52092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 52090,
                                "name": "shouldWorkAuctionSurplus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51919,
                                "src": "2551:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 52091,
                                "name": "_bool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52050,
                                "src": "2578:5:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2551:32:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 52093,
                            "nodeType": "ExpressionStatement",
                            "src": "2551:32:111"
                          }
                        },
                        "id": 52116,
                        "nodeType": "IfStatement",
                        "src": "2430:360:111",
                        "trueBody": {
                          "expression": {
                            "id": 52085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 52083,
                              "name": "shouldWorkAuctionDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51917,
                              "src": "2469:21:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 52084,
                              "name": "_bool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52050,
                              "src": "2493:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2469:29:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 52086,
                          "nodeType": "ExpressionStatement",
                          "src": "2469:29:111"
                        }
                      },
                      "id": 52117,
                      "nodeType": "IfStatement",
                      "src": "2341:449:111",
                      "trueBody": {
                        "expression": {
                          "id": 52078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 52076,
                            "name": "shouldWorkPopDebtFromQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51915,
                            "src": "2385:26:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 52077,
                            "name": "_bool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52050,
                            "src": "2414:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2385:34:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 52079,
                        "nodeType": "ExpressionStatement",
                        "src": "2385:34:111"
                      }
                    },
                    "id": 52118,
                    "nodeType": "IfStatement",
                    "src": "2238:552:111",
                    "trueBody": {
                      "expression": {
                        "id": 52071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52067,
                          "name": "stabilityFeeTreasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52135,
                          "src": "2276:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStabilityFeeTreasury_$62550",
                            "typeString": "contract IStabilityFeeTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52069,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52044,
                              "src": "2321:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52068,
                            "name": "IStabilityFeeTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62550,
                            "src": "2299:21:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStabilityFeeTreasury_$62550_$",
                              "typeString": "type(contract IStabilityFeeTreasury)"
                            }
                          },
                          "id": 52070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2299:31:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStabilityFeeTreasury_$62550",
                            "typeString": "contract IStabilityFeeTreasury"
                          }
                        },
                        "src": "2276:54:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStabilityFeeTreasury_$62550",
                          "typeString": "contract IStabilityFeeTreasury"
                        }
                      },
                      "id": 52072,
                      "nodeType": "ExpressionStatement",
                      "src": "2276:54:111"
                    }
                  },
                  "id": 52119,
                  "nodeType": "IfStatement",
                  "src": "2147:643:111",
                  "trueBody": {
                    "expression": {
                      "id": 52062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 52058,
                        "name": "accountingEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51924,
                        "src": "2181:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 52060,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52044,
                            "src": "2218:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 52059,
                          "name": "IAccountingEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60682,
                          "src": "2200:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAccountingEngine_$60682_$",
                            "typeString": "type(contract IAccountingEngine)"
                          }
                        },
                        "id": 52061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2200:27:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                          "typeString": "contract IAccountingEngine"
                        }
                      },
                      "src": "2181:46:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccountingEngine_$60682",
                        "typeString": "contract IAccountingEngine"
                      }
                    },
                    "id": 52063,
                    "nodeType": "ExpressionStatement",
                    "src": "2181:46:111"
                  }
                }
              ]
            },
            "baseFunctions": [60347],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_modifyParameters",
            "nameLocation": "1993:17:111",
            "overrides": {
              "id": 52041,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2056:8:111"
            },
            "parameters": {
              "id": 52040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52037,
                  "mutability": "mutable",
                  "name": "_param",
                  "nameLocation": "2019:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 52121,
                  "src": "2011:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52039,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2040:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 52121,
                  "src": "2027:18:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52038,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:36:111"
            },
            "returnParameters": {
              "id": 52042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:0:111"
            },
            "scope": 52122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51903,
              "name": "Job",
              "nameLocations": ["524:3:111"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52172,
              "src": "524:3:111"
            },
            "id": 51904,
            "nodeType": "InheritanceSpecifier",
            "src": "524:3:111"
          },
          {
            "baseName": {
              "id": 51905,
              "name": "Authorizable",
              "nameLocations": ["529:12:111"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59737,
              "src": "529:12:111"
            },
            "id": 51906,
            "nodeType": "InheritanceSpecifier",
            "src": "529:12:111"
          },
          {
            "baseName": {
              "id": 51907,
              "name": "Modifiable",
              "nameLocations": ["543:10:111"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60391,
              "src": "543:10:111"
            },
            "id": 51908,
            "nodeType": "InheritanceSpecifier",
            "src": "543:10:111"
          },
          {
            "baseName": {
              "id": 51909,
              "name": "IAccountingJob",
              "nameLocations": ["555:14:111"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63386,
              "src": "555:14:111"
            },
            "id": 51910,
            "nodeType": "InheritanceSpecifier",
            "src": "555:14:111"
          }
        ],
        "canonicalName": "AccountingJob",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [52122, 63386, 60391, 59737, 64599, 64338, 52172, 63410],
        "name": "AccountingJob",
        "nameLocation": "507:13:111",
        "scope": 52123,
        "usedErrors": [63398, 64310, 64312, 64314, 64578, 64580]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 111
}
