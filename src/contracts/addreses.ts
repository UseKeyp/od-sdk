import { WETH, ARB, OD, WSTETH, CBETH, RETH, MAGIC } from '../utils'

// All keys are mandatory
export type ContractKey =
    | 'MULTICALL'
    | 'ETH'
    | 'GEB_SYSTEM_COIN'
    | 'GEB_PROTOCOL_TOKEN'
    | 'GEB_SAFE_ENGINE'
    | 'GEB_ORACLE_RELAYER'
    | 'GEB_SURPLUS_AUCTION_HOUSE'
    | 'GEB_DEBT_AUCTION_HOUSE'
    | 'GEB_COLLATERAL_AUCTION_HOUSE_FACTORY'
    | 'GEB_ACCOUNTING_ENGINE'
    | 'GEB_LIQUIDATION_ENGINE'
    | 'GEB_COIN_JOIN'
    | 'GEB_COLLATERAL_JOIN_FACTORY'
    | 'GEB_TAX_COLLECTOR'
    | 'GEB_STABILITY_FEE_TREASURY'
    | 'GEB_GLOBAL_SETTLEMENT'
    | 'GEB_POST_SETTLEMENT_SURPLUS_AUCTION_HOUSE'
    | 'GEB_POST_SETTLEMENT_SURPLUS_AUCTIONEER'
    | 'GEB_RRFM_SETTER'
    | 'GEB_RRFM_CALCULATOR'
    | 'SAFE_MANAGER'
    | 'GEB_GLOBAL_SETTLEMENT'
    | 'PROXY_FACTORY'
    | 'PROXY_BASIC_ACTIONS'
    | 'PROXY_REGISTRY'
    | 'GEB_RRFM_SETTER'
    | 'GEB_RRFM_CALCULATOR'
    | 'PROXY_DEBT_AUCTION_ACTIONS'
    | 'PROXY_SURPLUS_AUCTION_ACTIONS'
    | 'PROXY_COLLATERAL_AUCTION_ACTIONS'
    | 'PROXY_POST_SETTLEMENT_SURPLUS_AUCTION_ACTIONS'
    | 'PROXY_GLOBAL_SETTLEMENT_ACTIONS'
    | 'PROXY_REWARDED_ACTIONS'
    | 'JOB_ACCOUNTING'
    | 'JOB_LIQUIDATION'
    | 'JOB_ORACLES'

export type ContractList = {
    [key in ContractKey]: string
}

export declare type GebDeployment = 'arbitrum' | 'arbitrum-goerli'

const addresses: Record<GebDeployment, ContractList> = {
    'arbitrum-goerli': {
        MULTICALL: '0xcA11bde05977b3631167028862bE2a173976CA11',
        ETH: '0xEe01c0CD76354C383B8c7B4e65EA88D00B06f36f',
        GEB_SYSTEM_COIN: '0x9a4D39Efaba9d225947bdC1f2B9386A646F438b2',
        GEB_PROTOCOL_TOKEN: '0xe6f6B739425a186A1E997B7b50aC60ebFb3EA6ec',
        GEB_SAFE_ENGINE: '0x32474e5Cf3452DFCc6ca340600cAC1f78C9aF733',
        GEB_ORACLE_RELAYER: '0x379822a342Ba69FaaC82796b5AA76a4Fcf102f18',
        GEB_SURPLUS_AUCTION_HOUSE: '0x74A31029DC0dAC158faBEC4a71cEd26E1C8B32BD',
        GEB_DEBT_AUCTION_HOUSE: '0x2218288df0cB8267a5A82Bb7D48682Bb5550F85D',
        GEB_COLLATERAL_AUCTION_HOUSE_FACTORY: '0xDA5f461F3a4dAFA11dE008098A166E3918E9290B',
        GEB_ACCOUNTING_ENGINE: '0xca5947DB460ee029FcA1Fa73d20e10b9Ed73A6D9',
        GEB_LIQUIDATION_ENGINE: '0xf224f3d71eB3844C0308056F1D467aa7Bb7b5C83',
        GEB_COIN_JOIN: '0xacc6511DE4D2aFd081624786AA773CF24C736569',
        GEB_COLLATERAL_JOIN_FACTORY: '0x78C530a4A35b814158B69Ee2D0a41bB96336E39A',
        GEB_TAX_COLLECTOR: '0x1A906C363FBB28999bFE798b037094cF55561f39',
        GEB_STABILITY_FEE_TREASURY: '0x22C78678318E8433B87EA31e49974ec03B64CFd2',
        GEB_GLOBAL_SETTLEMENT: '0x7b3Ded404f7d2AC27A29589A00286257B7C7C039',
        GEB_POST_SETTLEMENT_SURPLUS_AUCTION_HOUSE: '0xd8cfCb82D3f1e27F0A757c45aFA326E9225D37fE',
        GEB_POST_SETTLEMENT_SURPLUS_AUCTIONEER: '0x8758FeD3e23e134C497eFE0E1dF3266e9dC3df42',
        GEB_RRFM_SETTER: '0xE07767039234A5ACD6Fd099C1BEdF75f290622b9',
        GEB_RRFM_CALCULATOR: '0x3836c7F9C7dB0FdB17937Ca7A4E53C29aF09A431',
        SAFE_MANAGER: '0xF5Aa4AD994619576A8bD7057Ea4395ea756a66C2',
        PROXY_FACTORY: '0x8b68dda01E3c17edeb2fb03c6e390D25b906f8A2',
        PROXY_BASIC_ACTIONS: '0x74D0fECEf1b9D94Edd966a0a5e22bD5Abc9d31f3',
        PROXY_REGISTRY: '0x8b68dda01E3c17edeb2fb03c6e390D25b906f8A2',
        PROXY_DEBT_AUCTION_ACTIONS: '0x10a473C563b2339499da1374EB18C45C353351eb',
        PROXY_SURPLUS_AUCTION_ACTIONS: '0x7Df27c06FB8b6525FEaC2756A2d1Cf501240C322',
        PROXY_COLLATERAL_AUCTION_ACTIONS: '0xB5c349C3372Da3fFa5008C1f22f9cA93a25E1335',
        PROXY_POST_SETTLEMENT_SURPLUS_AUCTION_ACTIONS: '0xd4b027FC2D1b69981862f3ff281c12E53FB06C41',
        PROXY_GLOBAL_SETTLEMENT_ACTIONS: '0x6AA6326FbB0B809e2C862ae645d79e67302C0274',
        PROXY_REWARDED_ACTIONS: '0x5AE91f06F7386b09c25fe67D3C7628B762b53Ee7',
        JOB_ACCOUNTING: '0xfd0af2B3Dd4e8CD6D93d60DfE6884718cB043CFF',
        JOB_LIQUIDATION: '0x35e79f312E1341804bd4776de1Bac88AcA586038',
        JOB_ORACLES: '0x2B57d88681dC10dCdf72Aa38fE5Ac62fD2Cd3CF4',
    },
    arbitrum: {
        MULTICALL: '0xcA11bde05977b3631167028862bE2a173976CA11',
        ETH: '0x0000000000000000000000000000000000000000',
        GEB_SYSTEM_COIN: '0x0000000000000000000000000000000000000000',
        GEB_PROTOCOL_TOKEN: '0x0000000000000000000000000000000000000000',
        GEB_SAFE_ENGINE: '0x0000000000000000000000000000000000000000',
        GEB_ORACLE_RELAYER: '0x0000000000000000000000000000000000000000',
        GEB_SURPLUS_AUCTION_HOUSE: '0x0000000000000000000000000000000000000000',
        GEB_DEBT_AUCTION_HOUSE: '0x0000000000000000000000000000000000000000',
        GEB_ACCOUNTING_ENGINE: '0x0000000000000000000000000000000000000000',
        GEB_LIQUIDATION_ENGINE: '0x0000000000000000000000000000000000000000',
        GEB_COIN_JOIN: '0x0000000000000000000000000000000000000000',
        GEB_TAX_COLLECTOR: '0x0000000000000000000000000000000000000000',
        GEB_STABILITY_FEE_TREASURY: '0x0000000000000000000000000000000000000000',
        GEB_RRFM_CALCULATOR: '0x0000000000000000000000000000000000000000',
        GEB_RRFM_SETTER: '0x0000000000000000000000000000000000000000',
        GEB_GLOBAL_SETTLEMENT: '0x0000000000000000000000000000000000000000',
        SAFE_MANAGER: '0x0000000000000000000000000000000000000000',
        PROXY_FACTORY: '0x0000000000000000000000000000000000000000',
        PROXY_REGISTRY: '0x0000000000000000000000000000000000000000',
        PROXY_BASIC_ACTIONS: '0x0000000000000000000000000000000000000000',
        PROXY_DEBT_AUCTION_ACTIONS: '0x0000000000000000000000000000000000000000',
        PROXY_SURPLUS_AUCTION_ACTIONS: '0x0000000000000000000000000000000000000000',
        PROXY_COLLATERAL_AUCTION_ACTIONS: '0x0000000000000000000000000000000000000000',
        PROXY_REWARDED_ACTIONS: '0x0000000000000000000000000000000000000000',
        GEB_COLLATERAL_AUCTION_HOUSE_FACTORY: '0x0000000000000000000000000000000000000000',
        GEB_COLLATERAL_JOIN_FACTORY: '0x0000000000000000000000000000000000000000',
        GEB_POST_SETTLEMENT_SURPLUS_AUCTION_HOUSE: '0x0000000000000000000000000000000000000000',
        GEB_POST_SETTLEMENT_SURPLUS_AUCTIONEER: '0x0000000000000000000000000000000000000000',
        PROXY_POST_SETTLEMENT_SURPLUS_AUCTION_ACTIONS: '0x0000000000000000000000000000000000000000',
        PROXY_GLOBAL_SETTLEMENT_ACTIONS: '0x0000000000000000000000000000000000000000',
        JOB_ACCOUNTING: '0x0000000000000000000000000000000000000000',
        JOB_LIQUIDATION: '0x0000000000000000000000000000000000000000',
        JOB_ORACLES: '0x0000000000000000000000000000000000000000',
    },
}

export type TokenData = {
    address: string
    decimals: number
    symbol: string
    bytes32String: string
    collateralJoin: string
    collateralAuctionHouse: string
    isCollateral: boolean
}

export type TokenList = {
    [key: string]: TokenData
}

const tokens: Record<GebDeployment, TokenList> = {
    arbitrum: {},
    'arbitrum-goerli': {
        OD: {
            address: '0x9a4D39Efaba9d225947bdC1f2B9386A646F438b2',
            decimals: 18,
            symbol: 'OD',
            bytes32String: OD,
            collateralJoin: '',
            collateralAuctionHouse: '',
            isCollateral: false,
        },
        ODG: {
            address: '0xe6f6B739425a186A1E997B7b50aC60ebFb3EA6ec',
            decimals: 18,
            symbol: 'ODG',
            bytes32String: '',
            collateralJoin: '',
            collateralAuctionHouse: '',
            isCollateral: false,
        },
        WETH: {
            address: '0xEe01c0CD76354C383B8c7B4e65EA88D00B06f36f',
            collateralJoin: '',
            collateralAuctionHouse: '',
            decimals: 18,
            symbol: 'WETH',
            bytes32String: WETH,
            isCollateral: false,
        },
        WSTETH: {
            address: '0xb1C411460D37a6655f12370B17268b276b876176',
            collateralJoin: '0xd111Ef6e2115194dd8f2F9c1EE0CF94bF876E74c',
            collateralAuctionHouse: '0xc9b86e6e296d3cdB020923a8Bfd9D0d6909b4411',
            decimals: 18,
            symbol: 'WSTETH',
            bytes32String: WSTETH,
            isCollateral: true,
        },
        CBETH: {
            address: '0x884B20bd2A1929090d6085aB375615Ca57D0C34C',
            collateralJoin: '0x79239DF88c18e69bC71130947A5E9a058aa4Ae21',
            collateralAuctionHouse: '0x31317e37c605D773FD802627aD8c1Cbed50b2078',
            decimals: 18,
            symbol: 'CBETH',
            bytes32String: CBETH,
            isCollateral: true,
        },
        RETH: {
            address: '0xDea3A3742ecB96B5e9ABE960b83918c8c0110C1E',
            collateralJoin: '0x79621B953299E2E0637EEb1402EbedF90EDCB765',
            collateralAuctionHouse: '0x70c669b6aB37A1e0B4C014268c71F86345F80789',
            decimals: 18,
            symbol: 'RETH',
            bytes32String: RETH,
            isCollateral: true,
        },
        MAGIC: {
            address: '0x1A413460DF23D1c7767654DfD956D1e9C0c0A999',
            collateralJoin: '0x8B08724A76FAd747C2FAC457A4F6408B0401d20e',
            collateralAuctionHouse: '0x1Ed704ebef80262D78a8B8289940812750D3932C',
            decimals: 18,
            symbol: 'MAGIC',
            bytes32String: MAGIC,
            isCollateral: true,
        },
        ARB: {
            address: '0x15B8D9600B57FEC5dD8bb93b208fC908BA14561f',
            collateralJoin: '0x0e8e0844B12daA36564E374f1008267AcaA06732',
            collateralAuctionHouse: '0x573Be2b22aA60E530872b9CAA26B69f2B8e26925',
            decimals: 18,
            symbol: 'ARB',
            bytes32String: ARB,
            isCollateral: true,
        },
    },
}

const subgraphs: Record<GebDeployment, string> = {
    'arbitrum-goerli': 'https://api.studio.thegraph.com/query/52770/open-dollar---testnet/v1.5.5-rc.1',
    arbitrum: '',
}

export const getTokenList = (network: GebDeployment): TokenList => {
    return tokens[network]
}

export const getAddressList = (network: GebDeployment): ContractList => {
    return addresses[network]
}

export const getTokenDetails = (network: GebDeployment, tokenSymbol: string): TokenData | null => {
    const tokenList = getTokenList(network)
    if (tokenSymbol in tokenList) {
        return tokenList[tokenSymbol]
    }
    return null
}

export const getSubgraph = (network: GebDeployment): string => {
    return subgraphs[network]
}
